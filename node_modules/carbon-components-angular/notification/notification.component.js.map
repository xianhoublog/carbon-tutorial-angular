{"version":3,"file":"notification.component.js","sourceRoot":"","sources":["../src/notification/notification.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tComponent,\n\tInput,\n\tOutput,\n\tEventEmitter,\n\tComponentRef,\n\tViewChild,\n\tHostBinding\n} from \"@angular/core\";\n\nimport { NotificationContent } from \"./notification-content.interface\";\nimport { I18n } from \"./../i18n/i18n.module\";\nimport { NotificationDisplayService } from \"./notification-display.service\";\nimport { of, isObservable, Subject } from \"rxjs\";\n\n/**\n * Notification messages are displayed toward the top of the UI and do not interrupt userâ€™s work.\n *\n * [See demo](../../?path=/story/notification--basic)\n *\n * <example-url>../../iframe.html?id=notification--basic</example-url>\n */\n@Component({\n\tselector: \"ibm-notification\",\n\ttemplate: `\n\t\t<div class=\"bx--inline-notification__details\">\n\t\t\t<ibm-icon-error-filled16\n\t\t\t\t*ngIf=\"notificationObj.type === 'error'\"\n\t\t\t\tclass=\"bx--inline-notification__icon\">\n\t\t\t</ibm-icon-error-filled16>\n\t\t\t<ibm-icon-warning-filled16\n\t\t\t\t*ngIf=\"notificationObj.type === 'warning'\"\n\t\t\t\tclass=\"bx--inline-notification__icon\">\n\t\t\t</ibm-icon-warning-filled16>\n\t\t\t<ibm-icon-checkmark-filled16\n\t\t\t\t*ngIf=\"notificationObj.type === 'success'\"\n\t\t\t\tclass=\"bx--inline-notification__icon\">\n\t\t\t</ibm-icon-checkmark-filled16>\n\t\t\t<div class=\"bx--inline-notification__text-wrapper\">\n\t\t\t\t<p [innerHTML]=\"notificationObj.title\" class=\"bx--inline-notification__title\"></p>\n\t\t\t\t<p [innerHTML]=\"notificationObj.message\" class=\"bx--inline-notification__subtitle\"></p>\n\t\t\t</div>\n\t\t</div>\n\t\t<div *ngFor=\"let action of notificationObj.actions\">\n\t\t\t<button\n\t\t\t\t(click)=\"onClick(action, $event)\"\n\t\t\t\tibmButton=\"ghost\"\n\t\t\t\tsize=\"sm\"\n\t\t\t\tclass=\"bx--inline-notification__action-button\"\n\t\t\t\ttype=\"button\">\n\t\t\t\t{{action.text}}\n\t\t\t</button>\n\t\t</div>\n\t\t<button\n\t\t\t*ngIf=\"showClose\"\n\t\t\t(click)=\"onClose()\"\n\t\t\tclass=\"bx--inline-notification__close-button\"\n\t\t\t[attr.aria-label]=\"notificationObj.closeLabel | async\"\n\t\t\ttype=\"button\">\n\t\t\t<ibm-icon-close16 class=\"bx--inline-notification__close-icon\"></ibm-icon-close16>\n\t\t</button>\n\t`\n})\nexport class Notification {\n\t/**\n\t * Can have `type`, `title`, and `message` members.\n\t *\n\t * `type` can be one of `\"info\"`, `\"warning\"`, `\"error\"`, `\"success\"`\n\t *\n\t * `message` is the message to display\n\t */\n\t@Input() get notificationObj(): NotificationContent {\n\t\treturn this._notificationObj;\n\t}\n\tset notificationObj(obj: NotificationContent) {\n\t\tif (obj.closeLabel) {\n\t\t\tobj.closeLabel = of(obj.closeLabel);\n\t\t}\n\t\tthis._notificationObj = Object.assign({}, this.defaultNotificationObj, obj);\n\t}\n\n\t/**\n\t * Emits on close.\n\t */\n\t@Output() close: EventEmitter<any> = new EventEmitter();\n\n\tcomponentRef: ComponentRef<Notification>;\n\n\t@ViewChild(\"notification\") notification;\n\n\t@HostBinding(\"attr.id\") notificationID = \"notification\";\n\t@HostBinding(\"class.bx--inline-notification\") notificationClass = true;\n\t@HostBinding(\"attr.role\") role = \"alert\";\n\n\t@HostBinding(\"class.bx--inline-notification--error\") get isError() { return this.notificationObj.type === \"error\"; }\n\t@HostBinding(\"class.bx--inline-notification--info\") get isInfo() { return this.notificationObj.type === \"info\"; }\n\t@HostBinding(\"class.bx--inline-notification--success\") get isSuccess() { return this.notificationObj.type === \"success\"; }\n\t@HostBinding(\"class.bx--inline-notification--warning\") get isWarning() { return this.notificationObj.type === \"warning\"; }\n\t@HostBinding(\"class.bx--inline-notification--low-contrast\") get isLowContrast() { return this.notificationObj.lowContrast; }\n\n\tget showClose() {\n\t\treturn this._notificationObj.showClose;\n\t}\n\n\tprotected defaultNotificationObj = {\n\t\ttitle: \"\",\n\t\tmessage: \"\",\n\t\ttype: \"info\",\n\t\tshowClose: true,\n\t\tcloseLabel: this.i18n.get(\"NOTIFICATION.CLOSE_BUTTON\")\n\t};\n\tprotected _notificationObj: NotificationContent = Object.assign({}, this.defaultNotificationObj);\n\n\tconstructor(protected notificationDisplayService: NotificationDisplayService, protected i18n: I18n) {}\n\n\t/**\n\t * Emits close event.\n\t */\n\tonClose() {\n\t\tthis.close.emit();\n\t}\n\n\tonClick(action, event) {\n\t\tif (!action.click) {\n\t\t\treturn;\n\t\t}\n\t\tif (isObservable(action.click)) {\n\t\t\t(action.click as Subject<{event: Event, action: any}>).next({event, action});\n\t\t} else {\n\t\t\taction.click({event, action});\n\t\t}\n\t}\n\n\tdestroy() {\n\t\tthis.notificationDisplayService.close(this);\n\t}\n}\n"]}