{"version":3,"file":"notification-display.service.js","sourceRoot":"","sources":["../src/notification/notification-display.service.ts"],"names":[],"mappings":"AAAA,OAAO,EACN,UAAU,EACV,cAAc,EACd,MAAM,eAAe,CAAC;AAEvB;IAEC,oCAAsB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAAG,CAAC;IAExD;;OAEG;IACH,0CAAK,GAAL,UAAM,eAAoB;QAA1B,iBAOC;QANA,IAAI,eAAe,CAAC,QAAQ,EAAE;YAC7B,UAAU,CAAE;gBACX,KAAI,CAAC,cAAc,CAAC,UAAU,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;gBACzD,eAAe,CAAC,OAAO,EAAE,CAAC;YAC3B,CAAC,EAAE,GAAG,CAAC,CAAC;SACR;IACF,CAAC;;gBAdD,UAAU;;;;gBAHV,cAAc;;IAkBf,iCAAC;CAAA,AAfD,IAeC;SAdY,0BAA0B","sourcesContent":["import {\n\tInjectable,\n\tApplicationRef\n} from \"@angular/core\";\n\n@Injectable()\nexport class NotificationDisplayService {\n\tconstructor(protected applicationRef: ApplicationRef) {}\n\n\t/**\n\t * Programatically closes notification based on `notificationRef`.\t *\n\t */\n\tclose(notificationRef: any) {\n\t\tif (notificationRef.hostView) {\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.applicationRef.detachView(notificationRef.hostView);\n\t\t\t\tnotificationRef.destroy();\n\t\t\t}, 200);\n\t\t}\n\t}\n}\n"]}