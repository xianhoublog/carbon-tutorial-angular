{"version":3,"file":"toast.component.js","sourceRoot":"","sources":["../src/notification/toast.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EACN,SAAS,EACT,KAAK,EAEL,WAAW,EACX,MAAM,eAAe,CAAC;AAGvB,OAAO,EAAE,YAAY,EAAE,MAAM,0BAA0B,CAAC;AACxD,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAC/D,OAAO,EAAE,0BAA0B,EAAE,MAAM,gCAAgC,CAAC;AAC5E,OAAO,EAAE,IAAI,EAAE,MAAM,uBAAuB,CAAC;AAE7C;;;;;;GAMG;AACH;IA8B2B,yBAAY;IAuBtC,eACW,0BAAsD,EACtD,IAAU,EACV,YAAiC;QAH5C,YAIC,kBAAM,0BAA0B,EAAE,IAAI,CAAC,SAGvC;QANU,gCAA0B,GAA1B,0BAA0B,CAA4B;QACtD,UAAI,GAAJ,IAAI,CAAM;QACV,kBAAY,GAAZ,YAAY,CAAqB;QAlBpB,aAAO,GAAG,cAAc,CAAC;QACJ,gBAAU,GAAG,IAAI,CAAC;QACrC,UAAI,GAAG,OAAO,CAAC;QAkBxC,qCAAqC;QACrC,KAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;;IAChC,CAAC;IAlBD,sBAAwD,0BAAO;aAA/D,cAAoE,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,OAAO,CAAC,CAAC,CAAC;;;OAAA;IACtH,sBAAuD,yBAAM;aAA7D,cAAkE,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC;;;OAAA;IACnH,sBAA0D,4BAAS;aAAnE,cAAwE,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC;;;OAAA;IAC5H,sBAA0D,4BAAS;aAAnE,cAAwE,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC;;;OAAA;IAC5H,sBAA+D,gCAAa;aAA5E,cAAiF,OAAO,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC,CAAC;;;OAAA;IAG3H,sBAAI,iCAAc;aAAlB;YACC,OAAO,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC;QACzC,CAAC;;;OAAA;IAWD,wBAAQ,GAAR;QACC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE;YACrC,IAAI,CAAC,eAAe,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC;SAC5E;IACF,CAAC;;gBAlED,SAAS,SAAC;oBACV,QAAQ,EAAE,WAAW;oBACrB,QAAQ,EAAE,iqCA0BT;iBACD;;;;gBAvCQ,0BAA0B;gBAC1B,IAAI;gBAFJ,mBAAmB;;;kCA+C1B,KAAK;0BAEL,WAAW,SAAC,SAAS;6BACrB,WAAW,SAAC,8BAA8B;uBAC1C,WAAW,SAAC,WAAW;0BAEvB,WAAW,SAAC,qCAAqC;yBACjD,WAAW,SAAC,oCAAoC;4BAChD,WAAW,SAAC,uCAAuC;4BACnD,WAAW,SAAC,uCAAuC;gCACnD,WAAW,SAAC,4CAA4C;;IAqB1D,YAAC;CAAA,AAnED,CA8B2B,YAAY,GAqCtC;SArCY,KAAK","sourcesContent":["import {\n\tComponent,\n\tInput,\n\tOnInit,\n\tHostBinding\n} from \"@angular/core\";\n\nimport { ToastContent } from \"./notification-content.interface\";\nimport { Notification } from \"./notification.component\";\nimport { ExperimentalService } from \"./../experimental.module\";\nimport { NotificationDisplayService } from \"./notification-display.service\";\nimport { I18n } from \"./../i18n/i18n.module\";\n\n/**\n * Toast messages are displayed toward the top of the UI and do not interrupt userâ€™s work.\n *\n * [See demo](../../?path=/story/notification--toast)\n *\n * <example-url>../../iframe.html?id=notification--toast</example-url>\n */\n@Component({\n\tselector: \"ibm-toast\",\n\ttemplate: `\n\t\t<ibm-icon-error-filled16\n\t\t\t\t*ngIf=\"notificationObj.type === 'error'\"\n\t\t\t\tclass=\"bx--toast-notification__icon\">\n\t\t\t</ibm-icon-error-filled16>\n\t\t\t<ibm-icon-warning-filled16\n\t\t\t\t*ngIf=\"notificationObj.type === 'warning'\"\n\t\t\t\tclass=\"bx--toast-notification__icon\">\n\t\t\t</ibm-icon-warning-filled16>\n\t\t\t<ibm-icon-checkmark-filled16\n\t\t\t\t*ngIf=\"notificationObj.type === 'success'\"\n\t\t\t\tclass=\"bx--toast-notification__icon\">\n\t\t\t</ibm-icon-checkmark-filled16>\n\t\t<div class=\"bx--toast-notification__details\">\n\t\t\t<h3 class=\"bx--toast-notification__title\" [innerHTML]=\"notificationObj.title\"></h3>\n\t\t\t<p class=\"bx--toast-notification__subtitle\" [innerHTML]=\"notificationObj.subtitle\"></p>\n\t\t\t<p class=\"bx--toast-notification__caption\" [innerHTML]=\"notificationObj.caption\"></p>\n\t\t</div>\n\t\t<button\n\t\t\t*ngIf=\"showClose\"\n\t\t\tclass=\"bx--toast-notification__close-button\"\n\t\t\ttype=\"button\"\n\t\t\t[attr.aria-label]=\"notificationObj.closeLabel\"\n\t\t\t(click)=\"onClose()\">\n\t\t\t<ibm-icon-close16 class=\"bx--toast-notification__close-icon\"></ibm-icon-close16>\n\t\t</button>\n\t`\n})\nexport class Toast extends Notification implements OnInit {\n\t/**\n\t * Can have `type`, `title`, `subtitle`, and `caption` members.\n\t *\n\t * `type` can be one of `\"error\"`, `\"info\"`, `\"warning\"`, or `\"success\"`\n\t */\n\t@Input() notificationObj: ToastContent;\n\n\t@HostBinding(\"attr.id\") toastID = \"notification\";\n\t@HostBinding(\"class.bx--toast-notification\") toastClass = true;\n\t@HostBinding(\"attr.role\") role = \"alert\";\n\n\t@HostBinding(\"class.bx--toast-notification--error\") get isError() { return this.notificationObj[\"type\"] === \"error\"; }\n\t@HostBinding(\"class.bx--toast-notification--info\") get isInfo() { return this.notificationObj[\"type\"] === \"info\"; }\n\t@HostBinding(\"class.bx--toast-notification--success\") get isSuccess() { return this.notificationObj[\"type\"] === \"success\"; }\n\t@HostBinding(\"class.bx--toast-notification--warning\") get isWarning() { return this.notificationObj[\"type\"] === \"warning\"; }\n\t@HostBinding(\"class.bx--toast-notification--low-contrast\") get isLowContrast() { return this.notificationObj.lowContrast; }\n\n\n\tget isExperimental() {\n\t\treturn this.experimental.isExperimental;\n\t}\n\n\tconstructor(\n\t\tprotected notificationDisplayService: NotificationDisplayService,\n\t\tprotected i18n: I18n,\n\t\tprotected experimental: ExperimentalService) {\n\t\tsuper(notificationDisplayService, i18n);\n\t\t// disable inline notification styles\n\t\tthis.notificationClass = false;\n\t}\n\n\tngOnInit() {\n\t\tif (!this.notificationObj.closeLabel) {\n\t\t\tthis.notificationObj.closeLabel = this.i18n.get().NOTIFICATION.CLOSE_BUTTON;\n\t\t}\n\t}\n}\n"]}