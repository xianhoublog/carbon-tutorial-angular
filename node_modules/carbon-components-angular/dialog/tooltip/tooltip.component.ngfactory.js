/**
 *
 * carbon-angular v0.0.0 | tooltip.component.ngfactory.js
 *
 * Copyright 2014, 2020 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "./tooltip.component";
import * as i3 from "../../utils/element.service";
var styles_Tooltip = [];
var RenderType_Tooltip = i0.ɵcrt({ encapsulation: 2, styles: styles_Tooltip, data: {} });
export { RenderType_Tooltip as RenderType_Tooltip };
function View_Tooltip_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(0, null, null, 0))], null, null); }
function View_Tooltip_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(16777216, null, null, 2, null, View_Tooltip_2)), i0.ɵdid(1, 540672, null, 0, i1.NgTemplateOutlet, [i0.ViewContainerRef], { ngTemplateOutletContext: [0, "ngTemplateOutletContext"], ngTemplateOutlet: [1, "ngTemplateOutlet"] }, null), i0.ɵpod(2, { tooltip: 0 }), (_l()(), i0.ɵand(0, null, null, 0))], function (_ck, _v) { var _co = _v.component; var currVal_0 = _ck(_v, 2, 0, _co); var currVal_1 = _co.dialogConfig.content; _ck(_v, 1, 0, currVal_0, currVal_1); }, null); }
function View_Tooltip_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "p", [], null, null, null, null, null)), (_l()(), i0.ɵted(1, null, [" ", " "]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.dialogConfig.content; _ck(_v, 1, 0, currVal_0); }); }
export function View_Tooltip_0(_l) { return i0.ɵvid(0, [i0.ɵqud(402653184, 1, { dialog: 0 }), (_l()(), i0.ɵeld(1, 0, [[1, 0], ["dialog", 1]], null, 5, "div", [["class", "bx--tooltip bx--tooltip--shown"]], [[8, "id", 0], [1, "role", 0], [1, "data-floating-menu-direction", 0]], null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 0, "span", [["aria-hidden", "true"], ["class", "bx--tooltip__caret"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_Tooltip_1)), i0.ɵdid(4, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_Tooltip_3)), i0.ɵdid(6, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_3 = _co.hasContentTemplate; _ck(_v, 4, 0, currVal_3); var currVal_4 = !_co.hasContentTemplate; _ck(_v, 6, 0, currVal_4); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.dialogConfig.compID; var currVal_1 = _co.role; var currVal_2 = _co.placement; _ck(_v, 1, 0, currVal_0, currVal_1, currVal_2); }); }
export function View_Tooltip_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "ibm-tooltip", [], [[4, "display", null]], [[null, "keydown"], ["document", "click"]], function (_v, en, $event) { var ad = true; if (("keydown" === en)) {
        var pd_0 = (i0.ɵnov(_v, 1).escapeClose($event) !== false);
        ad = (pd_0 && ad);
    } if (("document:click" === en)) {
        var pd_1 = (i0.ɵnov(_v, 1).clickClose($event) !== false);
        ad = (pd_1 && ad);
    } return ad; }, View_Tooltip_0, RenderType_Tooltip)), i0.ɵdid(1, 4440064, null, 0, i2.Tooltip, [i0.ElementRef, [2, i3.ElementService]], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 1).style; _ck(_v, 0, 0, currVal_0); }); }
var TooltipNgFactory = i0.ɵccf("ibm-tooltip", i2.Tooltip, View_Tooltip_Host_0, { dialogConfig: "dialogConfig" }, { close: "close" }, []);
export { TooltipNgFactory as TooltipNgFactory };
//# sourceMappingURL=tooltip.component.ngfactory.js.map