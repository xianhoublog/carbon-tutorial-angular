{"version":3,"file":"overflow-menu.directive.js","sourceRoot":"","sources":["../../src/dialog/overflow-menu/overflow-menu.directive.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EACN,SAAS,EACT,UAAU,EACV,gBAAgB,EAChB,KAAK,EACL,WAAW,EACX,YAAY,EACZ,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,eAAe,EAAE,MAAM,uBAAuB,CAAC;AACxD,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AACpD,OAAO,EAAE,gBAAgB,EAAE,MAAM,gCAAgC,CAAC;AAGlE;;;;;;;;;;;;;;;GAeG;AACH;IAO2C,yCAAe;IAUzD;;OAEG;IACH,+BACW,UAAsB,EACtB,gBAAkC,EAClC,aAA4B;QAHvC,YAKC,kBAAM,UAAU,EAAE,gBAAgB,EAAE,aAAa,CAAC,SAElD;QANU,gBAAU,GAAV,UAAU,CAAY;QACtB,sBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,mBAAa,GAAb,aAAa,CAAe;QAXvC;;WAEG;QACM,UAAI,GAAG,KAAK,CAAC;QAWrB,aAAa,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;;IACxC,CAAC;IAED,4CAAY,GAAZ;QACC,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC;QACjD,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACpC,CAAC;IAED,4CAAY,GAAZ;QACC,IAAI,CAAC,YAAY,EAAE,CAAC;IACrB,CAAC;IAED,+CAAe,GAAf;QACC,IAAI,CAAC,YAAY,EAAE,CAAC;IACrB,CAAC;IAGD,wCAAQ,GADR,UACS,KAAoB;QAC5B,QAAQ,KAAK,CAAC,GAAG,EAAE;YAClB,KAAK,OAAO,CAAC;YACb,KAAK,GAAG;gBACP,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,MAAM;SACP;IACF,CAAC;;gBAnDD,SAAS,SAAC;oBACV,QAAQ,EAAE,mBAAmB;oBAC7B,QAAQ,EAAE,iBAAiB;oBAC3B,SAAS,EAAE;wBACV,aAAa;qBACb;iBACD;;;;gBAjCA,UAAU;gBACV,gBAAgB;gBAMR,aAAa;;;kCA+BpB,KAAK;uBAIL,KAAK;2BA2BL,YAAY,SAAC,SAAS,EAAE,CAAC,QAAQ,CAAC;;IAUpC,4BAAC;CAAA,AApDD,CAO2C,eAAe,GA6CzD;SA7CY,qBAAqB","sourcesContent":["import {\n\tDirective,\n\tElementRef,\n\tViewContainerRef,\n\tInput,\n\tTemplateRef,\n\tHostListener\n} from \"@angular/core\";\nimport { DialogDirective } from \"./../dialog.directive\";\nimport { DialogService } from \"./../dialog.service\";\nimport { OverflowMenuPane } from \"./overflow-menu-pane.component\";\n\n\n/**\n * Directive for extending `Dialog` to create overflow menus.\n *\n * class: OverflowMenuDirective (extends DialogDirective)\n *\n *\n * selector: `ibmOverflowMenu`\n *\n *\n * ```html\n * <div [ibmOverflowMenu]=\"templateRef\"></div>\n * <ng-template #templateRef>\n * \t<!-- overflow menu options here -->\n * </ng-template>\n * ```\n */\n@Directive({\n\tselector: \"[ibmOverflowMenu]\",\n\texportAs: \"ibmOverflowMenu\",\n\tproviders: [\n\t\tDialogService\n\t]\n})\nexport class OverflowMenuDirective extends DialogDirective {\n\t/**\n\t * Takes a template ref of `OverflowMenuOptions`s\n\t */\n\t@Input() ibmOverflowMenu: TemplateRef<any>;\n\t/**\n\t * Controls wether the overflow menu is flipped\n\t */\n\t@Input() flip = false;\n\n\t/**\n\t * Creates an instance of `OverflowMenuDirective`.\n\t */\n\tconstructor(\n\t\tprotected elementRef: ElementRef,\n\t\tprotected viewContainerRef: ViewContainerRef,\n\t\tprotected dialogService: DialogService\n\t) {\n\t\tsuper(elementRef, viewContainerRef, dialogService);\n\t\tdialogService.create(OverflowMenuPane);\n\t}\n\n\tupdateConfig() {\n\t\tthis.dialogConfig.content = this.ibmOverflowMenu;\n\t\tthis.dialogConfig.flip = this.flip;\n\t}\n\n\tonDialogInit() {\n\t\tthis.updateConfig();\n\t}\n\n\tonDialogChanges() {\n\t\tthis.updateConfig();\n\t}\n\n\t@HostListener(\"keydown\", [\"$event\"])\n\thostkeys(event: KeyboardEvent) {\n\t\tswitch (event.key) {\n\t\t\tcase \"Enter\":\n\t\t\tcase \" \":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.toggle();\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n"]}