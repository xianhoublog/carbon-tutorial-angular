/**
 *
 * carbon-angular v0.0.0 | breadcrumb-item.component.js
 *
 * Copyright 2014, 2020 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Component, HostBinding, Input, Output, EventEmitter, Optional } from "@angular/core";
import { DomSanitizer } from "@angular/platform-browser";
import { Router } from "@angular/router";
var BreadcrumbItemComponent = /** @class */ (function () {
    function BreadcrumbItemComponent(domSanitizer, router) {
        this.domSanitizer = domSanitizer;
        this.router = router;
        /**
         * Emits the navigation status promise when the link is activated
         */
        this.navigation = new EventEmitter();
        this.skeleton = false;
        this.ariaCurrent = "page";
        this.current = false;
        this.itemClass = true;
    }
    Object.defineProperty(BreadcrumbItemComponent.prototype, "href", {
        get: function () {
            return this.domSanitizer.bypassSecurityTrustUrl(this._href);
        },
        set: function (v) {
            this._href = v;
        },
        enumerable: true,
        configurable: true
    });
    BreadcrumbItemComponent.prototype.useTemplate = function () {
        return this.skeleton || this._href || this.route;
    };
    BreadcrumbItemComponent.prototype.navigate = function (event) {
        if (this.router && this.route) {
            event.preventDefault();
            var status_1 = this.router.navigate(this.route, this.routeExtras);
            this.navigation.emit(status_1);
        }
    };
    BreadcrumbItemComponent.decorators = [
        { type: Component, args: [{
                    selector: "ibm-breadcrumb-item",
                    template: "\n\t<a\n\t\tclass=\"bx--link\"\n\t\t[href]=\"(skeleton ? '/#' : href)\"\n\t\t(click)=\"navigate($event)\"\n\t\t[attr.aria-current]=\"(current ? ariaCurrent : null)\"\n\t\t*ngIf=\"useTemplate(); else content\">\n\t\t<ng-container *ngTemplateOutlet=\"content\"></ng-container>\n\t</a>\n\t<ng-template #content>\n\t\t<ng-content></ng-content>\n\t</ng-template>"
                },] },
    ];
    /** @nocollapse */
    BreadcrumbItemComponent.ctorParameters = function () { return [
        { type: DomSanitizer },
        { type: Router, decorators: [{ type: Optional }] }
    ]; };
    BreadcrumbItemComponent.propDecorators = {
        href: [{ type: Input }],
        route: [{ type: Input }],
        routeExtras: [{ type: Input }],
        navigation: [{ type: Output }],
        skeleton: [{ type: Input }],
        ariaCurrent: [{ type: Input }],
        current: [{ type: HostBinding, args: ["class.bx--breadcrumb-item--current",] }, { type: Input }],
        itemClass: [{ type: HostBinding, args: ["class.bx--breadcrumb-item",] }]
    };
    return BreadcrumbItemComponent;
}());
export { BreadcrumbItemComponent };
//# sourceMappingURL=breadcrumb-item.component.js.map