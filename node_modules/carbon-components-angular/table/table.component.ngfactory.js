/**
 *
 * carbon-angular v0.0.0 | table.component.ngfactory.js
 *
 * Copyright 2014, 2020 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
import * as i0 from "@angular/core";
import * as i1 from "./body/table-body.component.ngfactory";
import * as i2 from "@angular/common";
import * as i3 from "./body/table-body.component";
import * as i4 from "../i18n/i18n.service";
import * as i5 from "./table.directive";
import * as i6 from "./head/table-head.component.ngfactory";
import * as i7 from "./head/table-head.component";
import * as i8 from "./table.component";
var styles_Table = [];
var RenderType_Table = i0.ɵcrt({ encapsulation: 2, styles: styles_Table, data: {} });
export { RenderType_Table as RenderType_Table };
function View_Table_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 3, "tbody", [["ibmTableBody", ""]], null, [[null, "deselectRow"], [null, "scroll"], [null, "selectRow"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("deselectRow" === en)) {
        var pd_0 = (_co.onSelectRow($event) !== false);
        ad = (pd_0 && ad);
    } if (("scroll" === en)) {
        var pd_1 = (_co.onScroll($event) !== false);
        ad = (pd_1 && ad);
    } if (("selectRow" === en)) {
        var pd_2 = (_co.onSelectRow($event) !== false);
        ad = (pd_2 && ad);
    } return ad; }, i1.View_TableBody_0, i1.RenderType_TableBody)), i0.ɵdid(1, 278528, null, 0, i2.NgStyle, [i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2], { ngStyle: [0, "ngStyle"] }, null), i0.ɵpod(2, { "overflow-y": 0 }), i0.ɵdid(3, 49152, null, 0, i3.TableBody, [i4.I18n], { model: [0, "model"], enableSingleSelect: [1, "enableSingleSelect"], expandButtonAriaLabel: [2, "expandButtonAriaLabel"], checkboxRowLabel: [3, "checkboxRowLabel"], showSelectionColumn: [4, "showSelectionColumn"], size: [5, "size"], selectionLabelColumn: [6, "selectionLabelColumn"], skeleton: [7, "skeleton"] }, { selectRow: "selectRow", deselectRow: "deselectRow" })], function (_ck, _v) { var _co = _v.component; var currVal_0 = _ck(_v, 2, 0, "scroll"); _ck(_v, 1, 0, currVal_0); var currVal_1 = _co.model; var currVal_2 = _co.enableSingleSelect; var currVal_3 = _co.expandButtonAriaLabel; var currVal_4 = _co.getCheckboxRowLabel(); var currVal_5 = _co.showSelectionColumn; var currVal_6 = _co.size; var currVal_7 = _co.selectionLabelColumn; var currVal_8 = _co.skeleton; _ck(_v, 3, 0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8); }, null); }
function View_Table_2(_l) { return i0.ɵvid(0, [i0.ɵncd(null, 0), (_l()(), i0.ɵand(0, null, null, 0))], null, null); }
function View_Table_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(0, null, null, 0))], null, null); }
function View_Table_4(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 4, "tr", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 3, "td", [["class", "table_loading-indicator"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 2, "div", [["class", "bx--loading bx--loading--small"]], null, null, null, null, null)), (_l()(), i0.ɵeld(3, 0, null, null, 1, ":svg:svg", [["class", "bx--loading__svg"], ["viewBox", "-75 -75 150 150"]], null, null, null, null, null)), (_l()(), i0.ɵeld(4, 0, null, null, 0, ":svg:circle", [["class", "bx--loading__stroke"], ["cx", "0"], ["cy", "0"], ["r", "37.5"]], null, null, null, null, null))], null, null); }
function View_Table_5(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 7, "tr", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 6, "td", [["class", "table_end-indicator"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 2, "h5", [], null, null, null, null, null)), (_l()(), i0.ɵted(3, null, ["", ""])), i0.ɵpid(131072, i2.AsyncPipe, [i0.ChangeDetectorRef]), (_l()(), i0.ɵeld(5, 0, null, null, 2, "button", [["class", "btn--secondary-sm"]], null, [[null, "click"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("click" === en)) {
        var pd_0 = (_co.scrollToTop($event) !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null)), (_l()(), i0.ɵted(6, null, [" ", " "])), i0.ɵpid(131072, i2.AsyncPipe, [i0.ChangeDetectorRef])], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = i0.ɵunv(_v, 3, 0, i0.ɵnov(_v, 4).transform(_co.getEndOfDataText())); _ck(_v, 3, 0, currVal_0); var currVal_1 = i0.ɵunv(_v, 6, 0, i0.ɵnov(_v, 7).transform(_co.getScrollTopText())); _ck(_v, 6, 0, currVal_1); }); }
export function View_Table_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 15, "table", [["ibmTable", ""], ["sortable", "true"]], [[2, "bx--data-table--sort", null], [2, "bx--data-table--zebra", null], [2, "bx--skeleton", null], [2, "bx--data-table", null], [2, "bx--data-table--compact", null], [2, "bx--data-table--tall", null], [2, "bx--data-table--short", null]], null, null, null, null)), i0.ɵdid(1, 278528, null, 0, i2.NgClass, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2], { ngClass: [0, "ngClass"] }, null), i0.ɵpod(2, { "bx--data-table--sticky-header": 0 }), i0.ɵdid(3, 16384, null, 0, i5.TableDirective, [], { sortable: [0, "sortable"], striped: [1, "striped"], skeleton: [2, "skeleton"], size: [3, "size"] }, null), (_l()(), i0.ɵeld(4, 0, null, null, 1, "thead", [["ibmTableHead", ""]], null, [[null, "deselectAll"], [null, "selectAll"], [null, "sort"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("deselectAll" === en)) {
        var pd_0 = (_co.onDeselectAll() !== false);
        ad = (pd_0 && ad);
    } if (("selectAll" === en)) {
        var pd_1 = (_co.onSelectAll() !== false);
        ad = (pd_1 && ad);
    } if (("sort" === en)) {
        var pd_2 = (_co.sort.emit($event) !== false);
        ad = (pd_2 && ad);
    } return ad; }, i6.View_TableHead_0, i6.RenderType_TableHead)), i0.ɵdid(5, 4243456, null, 0, i7.TableHead, [i4.I18n], { model: [0, "model"], showSelectionColumn: [1, "showSelectionColumn"], enableSingleSelect: [2, "enableSingleSelect"], selectAllCheckboxSomeSelected: [3, "selectAllCheckboxSomeSelected"], selectAllCheckbox: [4, "selectAllCheckbox"], skeleton: [5, "skeleton"], stickyHeader: [6, "stickyHeader"], size: [7, "size"], checkboxHeaderLabel: [8, "checkboxHeaderLabel"], sortDescendingLabel: [9, "sortDescendingLabel"], sortAscendingLabel: [10, "sortAscendingLabel"], filterTitle: [11, "filterTitle"] }, { sort: "sort", selectAll: "selectAll", deselectAll: "deselectAll" }), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_Table_1)), i0.ɵdid(7, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"], ngIfElse: [1, "ngIfElse"] }, null), (_l()(), i0.ɵand(0, [["noDataTemplate", 2]], null, 0, null, View_Table_2)), (_l()(), i0.ɵeld(9, 0, null, null, 6, "tfoot", [], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_Table_3)), i0.ɵdid(11, 540672, null, 0, i2.NgTemplateOutlet, [i0.ViewContainerRef], { ngTemplateOutlet: [0, "ngTemplateOutlet"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_Table_4)), i0.ɵdid(13, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_Table_5)), i0.ɵdid(15, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_7 = _ck(_v, 2, 0, _co.stickyHeader); _ck(_v, 1, 0, currVal_7); var currVal_8 = "true"; var currVal_9 = _co.striped; var currVal_10 = _co.skeleton; var currVal_11 = _co.size; _ck(_v, 3, 0, currVal_8, currVal_9, currVal_10, currVal_11); var currVal_12 = _co.model; var currVal_13 = _co.showSelectionColumn; var currVal_14 = _co.enableSingleSelect; var currVal_15 = _co.selectAllCheckboxSomeSelected; var currVal_16 = _co.selectAllCheckbox; var currVal_17 = _co.skeleton; var currVal_18 = _co.stickyHeader; var currVal_19 = _co.size; var currVal_20 = _co.getCheckboxHeaderLabel(); var currVal_21 = _co.sortDescendingLabel; var currVal_22 = _co.sortAscendingLabel; var currVal_23 = _co.getFilterTitle(); _ck(_v, 5, 1, [currVal_12, currVal_13, currVal_14, currVal_15, currVal_16, currVal_17, currVal_18, currVal_19, currVal_20, currVal_21, currVal_22, currVal_23]); var currVal_24 = !_co.noData; var currVal_25 = i0.ɵnov(_v, 8); _ck(_v, 7, 0, currVal_24, currVal_25); var currVal_26 = _co.footerTemplate; _ck(_v, 11, 0, currVal_26); var currVal_27 = _co.model.isLoading; _ck(_v, 13, 0, currVal_27); var currVal_28 = _co.model.isEnd; _ck(_v, 15, 0, currVal_28); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 3).sortable; var currVal_1 = i0.ɵnov(_v, 3).striped; var currVal_2 = i0.ɵnov(_v, 3).skeleton; var currVal_3 = i0.ɵnov(_v, 3).tableClass; var currVal_4 = i0.ɵnov(_v, 3).compactClass; var currVal_5 = i0.ɵnov(_v, 3).tallClass; var currVal_6 = i0.ɵnov(_v, 3).shortClass; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6); }); }
export function View_Table_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "ibm-table", [], [[2, "bx--data-table_inner-container", null]], null, null, View_Table_0, RenderType_Table)), i0.ɵdid(1, 4374528, null, 0, i8.Table, [i0.ElementRef, i0.ApplicationRef, i4.I18n], null, null)], null, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 1).stickyHeader; _ck(_v, 0, 0, currVal_0); }); }
var TableNgFactory = i0.ɵccf("ibm-table", i8.Table, View_Table_Host_0, { model: "model", size: "size", skeleton: "skeleton", isDataGrid: "isDataGrid", enableRowSelect: "enableRowSelect", showSelectionColumn: "showSelectionColumn", enableSingleSelect: "enableSingleSelect", scrollLoadDistance: "scrollLoadDistance", columnsResizable: "columnsResizable", columnsDraggable: "columnsDraggable", expandButtonAriaLabel: "expandButtonAriaLabel", sortDescendingLabel: "sortDescendingLabel", sortAscendingLabel: "sortAscendingLabel", translations: "translations", striped: "striped", stickyHeader: "stickyHeader", footerTemplate: "footerTemplate", selectionLabelColumn: "selectionLabelColumn" }, { sort: "sort", selectAll: "selectAll", deselectAll: "deselectAll", selectRow: "selectRow", deselectRow: "deselectRow", scrollLoad: "scrollLoad" }, ["*"]);
export { TableNgFactory as TableNgFactory };
//# sourceMappingURL=table.component.ngfactory.js.map