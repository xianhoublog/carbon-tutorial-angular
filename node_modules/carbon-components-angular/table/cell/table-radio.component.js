/**
 *
 * carbon-angular v0.0.0 | table-radio.component.js
 *
 * Copyright 2014, 2020 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Component, Input, Output, EventEmitter } from "@angular/core";
import { I18n } from "./../../i18n/i18n.module";
var TableRadio = /** @class */ (function () {
    function TableRadio(i18n) {
        this.i18n = i18n;
        this.selected = false;
        this.skeleton = false;
        /**
         * Emits if a single row is selected.
         */
        this.change = new EventEmitter();
        this._label = this.i18n.getOverridable("TABLE.CHECKBOX_ROW");
    }
    Object.defineProperty(TableRadio.prototype, "label", {
        get: function () {
            return this._label.value;
        },
        set: function (value) {
            this._label.override(value);
        },
        enumerable: true,
        configurable: true
    });
    TableRadio.prototype.getSelectionLabelValue = function (row) {
        if (!this.selectionLabelColumn) {
            return { value: this.i18n.get().TABLE.ROW };
        }
        return { value: row[this.selectionLabelColumn].data };
    };
    TableRadio.prototype.getLabel = function () {
        return this._label.subject;
    };
    TableRadio.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line: component-selector
                    selector: "[ibmTableRadio]",
                    template: "\n\t\t<ibm-radio\n\t\t\t*ngIf=\"!skeleton\"\n\t\t\t[attr.aria-label]=\"getLabel() | i18nReplace:getSelectionLabelValue(row) | async\"\n\t\t\t[checked]=\"selected\"\n\t\t\t(change)=\"change.emit()\">\n\t\t</ibm-radio>\n\t"
                },] },
    ];
    /** @nocollapse */
    TableRadio.ctorParameters = function () { return [
        { type: I18n }
    ]; };
    TableRadio.propDecorators = {
        row: [{ type: Input }],
        selected: [{ type: Input }],
        label: [{ type: Input }],
        selectionLabelColumn: [{ type: Input }],
        skeleton: [{ type: Input }],
        change: [{ type: Output }]
    };
    return TableRadio;
}());
export { TableRadio };
//# sourceMappingURL=table-radio.component.js.map