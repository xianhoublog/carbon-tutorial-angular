/**
 *
 * carbon-angular v0.0.0 | table-expand-button.component.ngfactory.js
 *
 * Copyright 2014, 2020 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../../../../node_modules/@carbon/icons-angular/lib/chevron--right/16.ngfactory";
import * as i3 from "@carbon/icons-angular/lib/chevron--right/16";
import * as i4 from "./table-expand-button.component";
import * as i5 from "../../i18n/i18n.service";
var styles_TableExpandButton = [];
var RenderType_TableExpandButton = i0.ɵcrt({ encapsulation: 2, styles: styles_TableExpandButton, data: {} });
export { RenderType_TableExpandButton as RenderType_TableExpandButton };
function View_TableExpandButton_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 3, "button", [["class", "bx--table-expand__button"]], [[1, "aria-label", 0]], [[null, "click"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("click" === en)) {
        var pd_0 = (_co.expandRow.emit() !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null)), i0.ɵpid(131072, i1.AsyncPipe, [i0.ChangeDetectorRef]), (_l()(), i0.ɵeld(2, 0, null, null, 1, "ibm-icon-chevron-right16", [["innerClass", "bx--table-expand__svg"]], null, null, null, i2.View_ChevronRight16_0, i2.RenderType_ChevronRight16)), i0.ɵdid(3, 49152, null, 0, i3.ChevronRight16, [], { innerClass: [0, "innerClass"] }, null)], function (_ck, _v) { var currVal_1 = "bx--table-expand__svg"; _ck(_v, 3, 0, currVal_1); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = i0.ɵunv(_v, 0, 0, i0.ɵnov(_v, 1).transform(_co.getAriaLabel())); _ck(_v, 0, 0, currVal_0); }); }
export function View_TableExpandButton_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(16777216, null, null, 1, null, View_TableExpandButton_1)), i0.ɵdid(1, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.expandable; _ck(_v, 1, 0, currVal_0); }, null); }
export function View_TableExpandButton_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "div", [["ibmTableExpandButton", ""]], [[2, "bx--table-expand", null], [1, "data-previous-value", 0]], null, null, View_TableExpandButton_0, RenderType_TableExpandButton)), i0.ɵdid(1, 49152, null, 0, i4.TableExpandButton, [i5.I18n], null, null)], null, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 1).expandClass; var currVal_1 = i0.ɵnov(_v, 1).previousValue; _ck(_v, 0, 0, currVal_0, currVal_1); }); }
var TableExpandButtonNgFactory = i0.ɵccf("[ibmTableExpandButton]", i4.TableExpandButton, View_TableExpandButton_Host_0, { expanded: "expanded", expandable: "expandable", ariaLabel: "ariaLabel", skeleton: "skeleton" }, { expandRow: "expandRow" }, []);
export { TableExpandButtonNgFactory as TableExpandButtonNgFactory };
//# sourceMappingURL=table-expand-button.component.ngfactory.js.map