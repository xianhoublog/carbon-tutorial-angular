{"version":3,"file":"table-expand-button.component.js","sourceRoot":"","sources":["../../src/table/cell/table-expand-button.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACN,SAAS,EACT,KAAK,EACL,MAAM,EACN,YAAY,EACZ,WAAW,EACX,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,IAAI,EAAe,MAAM,0BAA0B,CAAC;AAG7D;IA6CC,2BAAsB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QA/BhC;;WAEG;QACM,aAAQ,GAAG,KAAK,CAAC;QAC1B;;;WAGG;QACM,eAAU,GAAG,KAAK,CAAC;QAWnB,aAAQ,GAAG,KAAK,CAAC;QAEa,gBAAW,GAAG,IAAI,CAAC;QAMhD,cAAS,GAAG,IAAI,YAAY,EAAQ,CAAC;QAErC,eAAU,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,qBAAqB,CAAC,CAAC;IAEnC,CAAC;IArBrC,sBACI,wCAAS;aAIb;YACC,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;QAC9B,CAAC;aAPD,UACc,KAAkC;YAC/C,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC;;;OAAA;IAUD,sBAA6C,4CAAa;aAA1D;YACC,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC;QAC3C,CAAC;;;OAAA;IAQD,wCAAY,GAAZ;QACC,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;IAChC,CAAC;;gBAjDD,SAAS,SAAC;oBACV,+CAA+C;oBAC/C,QAAQ,EAAE,wBAAwB;oBAClC,QAAQ,EAAE,mSAQT;iBACD;;;;gBAfQ,IAAI;;;2BAoBX,KAAK;6BAKL,KAAK;4BAEL,KAAK;2BASL,KAAK;8BAEL,WAAW,SAAC,wBAAwB;gCAEpC,WAAW,SAAC,0BAA0B;4BAItC,MAAM;;IASR,wBAAC;CAAA,AAlDD,IAkDC;SArCY,iBAAiB","sourcesContent":["import {\n\tComponent,\n\tInput,\n\tOutput,\n\tEventEmitter,\n\tHostBinding\n} from \"@angular/core\";\nimport { I18n, Overridable } from \"./../../i18n/i18n.module\";\nimport { Observable } from \"rxjs\";\n\n@Component({\n\t// tslint:disable-next-line: component-selector\n\tselector: \"[ibmTableExpandButton]\",\n\ttemplate: `\n\t\t<button\n\t\t\t*ngIf=\"expandable\"\n\t\t\tclass=\"bx--table-expand__button\"\n\t\t\t[attr.aria-label]=\"getAriaLabel() | async\"\n\t\t\t(click)=\"expandRow.emit()\">\n\t\t\t<ibm-icon-chevron-right16 innerClass=\"bx--table-expand__svg\"></ibm-icon-chevron-right16>\n\t\t</button>\n\t`\n})\nexport class TableExpandButton {\n\t/**\n\t * Set to true to indicate the row has expanded\n\t */\n\t@Input() expanded = false;\n\t/**\n\t * Set to true to indicate the row can be expanded.\n\t * Defaults to false to allow for correct column alignment\n\t */\n\t@Input() expandable = false;\n\n\t@Input()\n\tset ariaLabel(value: string | Observable<string>) {\n\t\tthis._ariaLabel.override(value);\n\t}\n\n\tget ariaLabel() {\n\t\treturn this._ariaLabel.value;\n\t}\n\n\t@Input() skeleton = false;\n\n\t@HostBinding(\"class.bx--table-expand\") expandClass = true;\n\n\t@HostBinding(\"attr.data-previous-value\") get previousValue() {\n\t\treturn this.expanded ? \"collapsed\" : null;\n\t}\n\n\t@Output() expandRow = new EventEmitter<void>();\n\n\tprotected _ariaLabel = this.i18n.getOverridable(\"TABLE.EXPAND_BUTTON\");\n\n\tconstructor(protected i18n: I18n) { }\n\n\tgetAriaLabel(): Observable<string> {\n\t\treturn this._ariaLabel.subject;\n\t}\n}\n"]}