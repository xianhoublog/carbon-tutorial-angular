/**
 *
 * carbon-angular v0.0.0 | table-row.component.ngfactory.js
 *
 * Copyright 2014, 2020 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
import * as i0 from "@angular/core";
import * as i1 from "../cell/table-expand-button.component.ngfactory";
import * as i2 from "../cell/table-expand-button.component";
import * as i3 from "../../i18n/i18n.service";
import * as i4 from "../cell/table-checkbox.component.ngfactory";
import * as i5 from "../cell/table-checkbox.component";
import * as i6 from "../cell/table-radio.component.ngfactory";
import * as i7 from "../cell/table-radio.component";
import * as i8 from "../cell/table-data.component.ngfactory";
import * as i9 from "@angular/common";
import * as i10 from "../cell/table-data.component";
import * as i11 from "./table-row.component";
var styles_TableRowComponent = [];
var RenderType_TableRowComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_TableRowComponent, data: {} });
export { RenderType_TableRowComponent as RenderType_TableRowComponent };
function View_TableRowComponent_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "td", [["class", "bx--table-expand-v2"], ["ibmTableExpandButton", ""]], [[8, "headers", 0], [2, "bx--table-expand", null], [1, "data-previous-value", 0]], [[null, "expandRow"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("expandRow" === en)) {
        var pd_0 = (_co.expandRow.emit() !== false);
        ad = (pd_0 && ad);
    } return ad; }, i1.View_TableExpandButton_0, i1.RenderType_TableExpandButton)), i0.ɵdid(1, 49152, null, 0, i2.TableExpandButton, [i3.I18n], { expanded: [0, "expanded"], expandable: [1, "expandable"], ariaLabel: [2, "ariaLabel"], skeleton: [3, "skeleton"] }, { expandRow: "expandRow" })], function (_ck, _v) { var _co = _v.component; var currVal_3 = _co.expanded; var currVal_4 = _co.expandable; var currVal_5 = _co.getExpandButtonAriaLabel(); var currVal_6 = _co.skeleton; _ck(_v, 1, 0, currVal_3, currVal_4, currVal_5, currVal_6); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.model.getHeaderId("expand"); var currVal_1 = i0.ɵnov(_v, 1).expandClass; var currVal_2 = i0.ɵnov(_v, 1).previousValue; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2); }); }
function View_TableRowComponent_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "td", [["class", "bx--table-column-checkbox"], ["ibmTableCheckbox", ""]], [[8, "headers", 0]], [[null, "change"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("change" === en)) {
        var pd_0 = (_co.onSelectionChange() !== false);
        ad = (pd_0 && ad);
    } return ad; }, i4.View_TableCheckbox_0, i4.RenderType_TableCheckbox)), i0.ɵdid(1, 49152, null, 0, i5.TableCheckbox, [i3.I18n], { row: [0, "row"], selected: [1, "selected"], size: [2, "size"], label: [3, "label"], skeleton: [4, "skeleton"] }, { change: "change" })], function (_ck, _v) { var _co = _v.component; var currVal_1 = _co.row; var currVal_2 = _co.selected; var currVal_3 = _co.size; var currVal_4 = _co.getCheckboxLabel(); var currVal_5 = _co.skeleton; _ck(_v, 1, 0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.model.getHeaderId("select"); _ck(_v, 0, 0, currVal_0); }); }
function View_TableRowComponent_4(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "td", [["ibmTableRadio", ""]], [[8, "headers", 0]], [[null, "change"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("change" === en)) {
        var pd_0 = (_co.onSelectionChange() !== false);
        ad = (pd_0 && ad);
    } return ad; }, i6.View_TableRadio_0, i6.RenderType_TableRadio)), i0.ɵdid(1, 49152, null, 0, i7.TableRadio, [i3.I18n], { row: [0, "row"], selected: [1, "selected"], label: [2, "label"], skeleton: [3, "skeleton"] }, { change: "change" })], function (_ck, _v) { var _co = _v.component; var currVal_1 = _co.row; var currVal_2 = _co.selected; var currVal_3 = _co.getCheckboxLabel(); var currVal_4 = _co.skeleton; _ck(_v, 1, 0, currVal_1, currVal_2, currVal_3, currVal_4); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.model.getHeaderId("select"); _ck(_v, 0, 0, currVal_0); }); }
function View_TableRowComponent_6(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, "td", [["ibmTableData", ""]], [[8, "headers", 0], [8, "className", 0], [1, "colspan", 0], [1, "rowspan", 0]], null, null, i8.View_TableData_0, i8.RenderType_TableData)), i0.ɵdid(1, 278528, null, 0, i9.NgStyle, [i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2], { ngStyle: [0, "ngStyle"] }, null), i0.ɵdid(2, 49152, null, 0, i10.TableData, [], { item: [0, "item"], skeleton: [1, "skeleton"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_4 = _co.model.getHeader(_v.parent.context.index).style; _ck(_v, 1, 0, currVal_4); var currVal_5 = _v.parent.context.$implicit; var currVal_6 = _co.skeleton; _ck(_v, 2, 0, currVal_5, currVal_6); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.model.getHeaderId(_v.parent.context.index, _v.parent.context.$implicit.colSpan); var currVal_1 = _co.model.getHeader(_v.parent.context.index).className; var currVal_2 = _v.parent.context.$implicit.colSpan; var currVal_3 = _v.parent.context.$implicit.rowSpan; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3); }); }
function View_TableRowComponent_7(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "td", [["ibmTableData", ""]], [[8, "headers", 0], [1, "colspan", 0], [1, "rowspan", 0]], null, null, i8.View_TableData_0, i8.RenderType_TableData)), i0.ɵdid(1, 49152, null, 0, i10.TableData, [], { item: [0, "item"], skeleton: [1, "skeleton"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_3 = _v.parent.context.$implicit; var currVal_4 = _co.skeleton; _ck(_v, 1, 0, currVal_3, currVal_4); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.model.getHeaderId(_v.parent.context.index, _v.parent.context.$implicit.colSpan); var currVal_1 = _v.parent.context.$implicit.colSpan; var currVal_2 = _v.parent.context.$implicit.rowSpan; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2); }); }
function View_TableRowComponent_5(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 4, null, null, null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_TableRowComponent_6)), i0.ɵdid(2, 16384, null, 0, i9.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_TableRowComponent_7)), i0.ɵdid(4, 16384, null, 0, i9.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null), (_l()(), i0.ɵand(0, null, null, 0))], function (_ck, _v) { var _co = _v.component; var currVal_0 = ((_v.context.$implicit && _co.model.getHeader(_v.context.index)) && _co.model.getHeader(_v.context.index).visible); _ck(_v, 2, 0, currVal_0); var currVal_1 = (_v.context.$implicit && (_co.model.getHeader(_v.context.index) == null)); _ck(_v, 4, 0, currVal_1); }, null); }
function View_TableRowComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 8, null, null, null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_TableRowComponent_2)), i0.ɵdid(2, 16384, null, 0, i9.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_TableRowComponent_3)), i0.ɵdid(4, 16384, null, 0, i9.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_TableRowComponent_4)), i0.ɵdid(6, 16384, null, 0, i9.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_TableRowComponent_5)), i0.ɵdid(8, 278528, null, 0, i9.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, "ngForOf"] }, null), (_l()(), i0.ɵand(0, null, null, 0))], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.model.hasExpandableRows(); _ck(_v, 2, 0, currVal_0); var currVal_1 = ((!_co.skeleton && _co.showSelectionColumn) && !_co.enableSingleSelect); _ck(_v, 4, 0, currVal_1); var currVal_2 = ((!_co.skeleton && _co.showSelectionColumn) && _co.enableSingleSelect); _ck(_v, 6, 0, currVal_2); var currVal_3 = _co.row; _ck(_v, 8, 0, currVal_3); }, null); }
export function View_TableRowComponent_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(16777216, null, null, 1, null, View_TableRowComponent_1)), i0.ɵdid(1, 16384, null, 0, i9.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null), i0.ɵncd(null, 0)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.model; _ck(_v, 1, 0, currVal_0); }, null); }
export function View_TableRowComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "div", [["ibmTableRow", ""]], [[2, "bx--data-table--selected", null], [2, "bx--parent-row", null], [2, "bx--expandable-row", null], [2, "tbody_row--selectable", null], [1, "data-parent-row", 0]], [[null, "click"]], function (_v, en, $event) { var ad = true; if (("click" === en)) {
        var pd_0 = (i0.ɵnov(_v, 1).onRowClick() !== false);
        ad = (pd_0 && ad);
    } return ad; }, View_TableRowComponent_0, RenderType_TableRowComponent)), i0.ɵdid(1, 49152, null, 0, i11.TableRowComponent, [i3.I18n], null, null)], null, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 1).selectedClass; var currVal_1 = i0.ɵnov(_v, 1).parentRowClass; var currVal_2 = i0.ɵnov(_v, 1).expandableRowClass; var currVal_3 = i0.ɵnov(_v, 1).selectableClass; var currVal_4 = i0.ɵnov(_v, 1).isParentRow; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4); }); }
var TableRowComponentNgFactory = i0.ɵccf("[ibmTableRow]", i11.TableRowComponent, View_TableRowComponent_Host_0, { model: "model", row: "row", expanded: "expanded", expandable: "expandable", selected: "selected", size: "size", enableSingleSelect: "enableSingleSelect", expandButtonAriaLabel: "expandButtonAriaLabel", checkboxLabel: "checkboxLabel", showSelectionColumn: "showSelectionColumn", selectionLabelColumn: "selectionLabelColumn", skeleton: "skeleton" }, { selectRow: "selectRow", deselectRow: "deselectRow", expandRow: "expandRow" }, ["*"]);
export { TableRowComponentNgFactory as TableRowComponentNgFactory };
//# sourceMappingURL=table-row.component.ngfactory.js.map