{"version":3,"file":"structured-list.component.js","sourceRoot":"","sources":["../src/structured-list/structured-list.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tComponent,\n\tInput,\n\tContentChildren,\n\tQueryList,\n\tAfterContentInit,\n\tOutput,\n\tEventEmitter\n} from \"@angular/core\";\nimport { ListRow } from \"./list-row.component\";\nimport { ListHeader } from \"./list-header.component\";\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from \"@angular/forms\";\n\n/**\n * Structured Lists represent related tabular data. For larger datasets consider a full `Table`.\n *\n * [See demo](../../?path=/story/structured-list--basic)\n *\n * See [structured-list/usage](https://www.carbondesignsystem.com/components/structured-list/usage) for usage guidance.\n *\n * A basic structued list looks something like:\n * ```html\n *\t<ibm-structured-list>\n *\t\t<ibm-list-header>\n *\t\t\t<ibm-list-column nowrap=\"true\">Column 1</ibm-list-column>\n *\t\t\t<ibm-list-column nowrap=\"true\">Column 2</ibm-list-column>\n *\t\t\t<ibm-list-column>Column 3</ibm-list-column>\n *\t\t</ibm-list-header>\n *\t\t<ibm-list-row>\n *\t\t\t<ibm-list-column>Row 1</ibm-list-column>\n *\t\t\t<ibm-list-column nowrap=\"true\">Row One</ibm-list-column>\n *\t\t\t<ibm-list-column>\n *\t\t\t\tLorem ipsum dolor sit amet,\n *\t\t\t\tconsectetur adipiscing elit. Nunc dui magna,\n *\t\t\t\tfinibus id tortor sed, aliquet bibendum augue.\n *\t\t\t\tAenean posuere sem vel euismod dignissim. Nulla ut cursus dolor.\n *\t\t\t\tPellentesque vulputate nisl a porttitor interdum.\n *\t\t\t</ibm-list-column>\n *\t\t</ibm-list-row>\n *\t\t<ibm-list-row>\n *\t\t\t<ibm-list-column>Row 2</ibm-list-column>\n *\t\t\t<ibm-list-column nowrap=\"true\">Row Two</ibm-list-column>\n *\t\t\t<ibm-list-column>\n *\t\t\t\tLorem ipsum dolor sit amet,\n *\t\t\t\tconsectetur adipiscing elit. Nunc dui magna,\n *\t\t\t\tfinibus id tortor sed, aliquet bibendum augue.\n *\t\t\t\tAenean posuere sem vel euismod dignissim. Nulla ut cursus dolor.\n *\t\t\t\tPellentesque vulputate nisl a porttitor interdum.\n *\t\t\t</ibm-list-column>\n *\t\t</ibm-list-row>\n *\t</ibm-structured-list>\n * ```\n *\n * <example-url>../../iframe.html?id=structured-list--basic</example-url>\n */\n@Component({\n\tselector: \"ibm-structured-list\",\n\ttemplate: `\n\t\t<section\n\t\t\tclass=\"bx--structured-list\"\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--structured-list--border': border,\n\t\t\t\t'bx--structured-list--selection': selection,\n\t\t\t\t'bx--structured-list--condensed': condensed,\n\t\t\t\t'bx--structured-list-content--nowrap': nowrap,\n\t\t\t\t'bx--skeleton': skeleton\n\t\t\t}\">\n\t\t\t<ng-content select=\"ibm-list-header\"></ng-content>\n\t\t\t<div class=\"bx--structured-list-tbody\">\n\t\t\t\t<ng-content></ng-content>\n\t\t\t</div>\n\t\t</section>\n\t`,\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tuseExisting: StructuredList,\n\t\t\tmulti: true\n\t\t}\n\t]\n})\nexport class StructuredList implements AfterContentInit, ControlValueAccessor {\n\t/**\n\t * A counter to provide unique default values.\n\t */\n\tstatic listCount = 0;\n\t/**\n\t * Set to `true` to enable radio like selection of the rows.\n\t */\n\t@Input() selection = false;\n\t/**\n\t * Set to `true` to apply a border and white background.\n\t */\n\t@Input() border = false;\n\t/**\n\t * Set to `true` to apply a condensed style to the headers and rows.\n\t */\n\t@Input() condensed = false;\n\t/**\n\t * Set to `true` to apply `white-space: nowrap` on _all_ conent.\n\t */\n\t@Input() nowrap = false;\n\t/**\n\t * Used when `selection = true` as the row radio group `name`\n\t */\n\t@Input() name = `structured-list-${StructuredList.listCount++}`;\n\n\t/**\n\t * Sets the skeleton value for all `ListHeader` to the skeleton value of `StructuredList`.\n\t */\n\t@Input()\n\tset skeleton(value: any) {\n\t\tthis._skeleton = value;\n\t\tthis.updateChildren();\n\t}\n\n\t/**\n\t * Returns the skeleton value in the `StructuredList` if there is one.\n\t */\n\tget skeleton(): any {\n\t\treturn this._skeleton;\n\t}\n\n\t/**\n\t * Emits an event when the row selection changes.\n\t *\n\t * Emits an object that looks like:\n\t * ```javascript\n\t * {\n\t * \tvalue: \"something\",\n\t * \tselected: true,\n\t * \tname: \"structured-list-1\"\n\t * }\n\t * ```\n\t */\n\t@Output() selected: EventEmitter<{value: string, selected: boolean, name: string}> = new EventEmitter();\n\n\t@ContentChildren(ListRow) rows: QueryList<ListRow>;\n\t@ContentChildren(ListHeader) headers: QueryList<ListHeader>;\n\n\tprotected _skeleton = false;\n\n\tonChange = (_: any) => { };\n\n\tonTouched = () => { };\n\n\tngAfterContentInit() {\n\t\tconst setSelection = (rowOrHeader: ListRow | ListHeader) => {\n\t\t\trowOrHeader.selection = this.selection;\n\t\t};\n\n\t\tthis.headers.forEach(setSelection);\n\t\tthis.rows.forEach(row => {\n\t\t\tsetSelection(row);\n\t\t\trow.name = this.name;\n\t\t\trow.change.subscribe(() => {\n\t\t\t\tthis.selected.emit({\n\t\t\t\t\tvalue: row.value,\n\t\t\t\t\tselected: row.selected,\n\t\t\t\t\tname: this.name\n\t\t\t\t});\n\t\t\t\tthis.onChange(row.value);\n\t\t\t});\n\t\t});\n\t\tthis.updateChildren();\n\t}\n\n\twriteValue(value: any) {\n\t\tif (!this.rows) { return; }\n\t\tthis.rows.forEach(row => {\n\t\t\tif (row.value === value) {\n\t\t\t\trow.selected = true;\n\t\t\t} else {\n\t\t\t\trow.selected = false;\n\t\t\t}\n\t\t});\n\t}\n\n\tregisterOnChange(fn: any) {\n\t\tthis.onChange = fn;\n\t}\n\n\tregisterOnTouched(fn: any) {\n\t\tthis.onTouched = fn;\n\t}\n\n\tprotected updateChildren() {\n\t\tif (this.headers) {\n\t\t\tthis.headers.toArray().forEach(child => child.skeleton = this.skeleton);\n\t\t}\n\t}\n}\n"]}