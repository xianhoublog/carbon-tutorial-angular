{"version":3,"file":"element.service.js","sourceRoot":"","sources":["../src/utils/element.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAc,IAAI,EAAE,MAAM,MAAM,CAAC;AACxC,OAAO,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AACrC,OAAO,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,MAAM,UAAU,CAAC;AACtE,OAAO,EAAE,8BAA8B,EAAE,MAAM,2BAA2B,CAAC;AAM3E;IAIC,wBAAsB,SAAyC;QAAzC,cAAS,GAAT,SAAS,CAAgC;QAC9D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IACvC,CAAC;IAED,mCAAU,GAAV,UAAW,MAAmB,EAAE,aAAmC;QAAnC,8BAAA,EAAA,sBAAmC;QAClE,IAAM,iBAAiB,GAAG,oBAAoB,CAAC,aAAa,CAAC,CAAC;QAC9D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;YACzB,KAAqB,UAAiB,EAAjB,uCAAiB,EAAjB,+BAAiB,EAAjB,IAAiB,EAAE;gBAAnC,IAAM,QAAM,0BAAA;gBAChB,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,QAAM,CAAC,EAAE;oBAC1C,OAAO;wBACN,OAAO,EAAE,KAAK;qBACd,CAAC;iBACF;aACD;YACD,OAAO;gBACN,OAAO,EAAE,IAAI;aACb,CAAC;QACH,CAAC,CAAC,CAAC,CAAC;IACL,CAAC;;gBAtBD,UAAU;;;;gBANF,8BAA8B;;IA6BvC,qBAAC;CAAA,AAvBD,IAuBC;SAtBY,cAAc","sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { Observable, from } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { getScrollableParents, isVisibleInContainer } from \"./scroll\";\nimport { AnimationFrameServiceSingleton } from \"./animation-frame.service\";\n\nexport interface ElementVisibilityEvent {\n\tvisible: boolean;\n}\n\n@Injectable()\nexport class ElementService {\n\tprotected tick: Observable<number>;\n\n\tconstructor(protected singleton: AnimationFrameServiceSingleton) {\n\t\tthis.tick = from(this.singleton.tick);\n\t}\n\n\tvisibility(target: HTMLElement, parentElement: HTMLElement = target): Observable<ElementVisibilityEvent> {\n\t\tconst scrollableParents = getScrollableParents(parentElement);\n\t\treturn this.tick.pipe(map(() => {\n\t\t\tfor (const parent of scrollableParents) {\n\t\t\t\tif (!isVisibleInContainer(target, parent)) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvisible: false\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tvisible: true\n\t\t\t};\n\t\t}));\n\t}\n}\n"]}