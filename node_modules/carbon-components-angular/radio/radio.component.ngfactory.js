/**
 *
 * carbon-angular v0.0.0 | radio.component.ngfactory.js
 *
 * Copyright 2014, 2020 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/forms";
import * as i3 from "./radio.component";
var styles_Radio = [];
var RenderType_Radio = i0.ɵcrt({ encapsulation: 2, styles: styles_Radio, data: {} });
export { RenderType_Radio as RenderType_Radio };
function View_Radio_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 0, "input", [["class", "bx--radio-button"], ["type", "radio"]], [[8, "checked", 0], [8, "disabled", 0], [8, "name", 0], [8, "id", 0], [8, "required", 0], [8, "value", 0], [1, "aria-labelledby", 0]], [[null, "change"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("change" === en)) {
        var pd_0 = (_co.onChange($event) !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.checked; var currVal_1 = _co.disabled; var currVal_2 = _co.name; var currVal_3 = _co.id; var currVal_4 = _co.required; var currVal_5 = _co.value; var currVal_6 = _co.ariaLabelledby; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6); }); }
function View_Radio_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 0, "div", [["class", "bx--radio-button bx--skeleton"]], null, null, null, null, null))], null, null); }
export function View_Radio_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(16777216, null, null, 1, null, View_Radio_1)), i0.ɵdid(1, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_Radio_2)), i0.ɵdid(3, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null), (_l()(), i0.ɵeld(4, 0, null, null, 4, "label", [["class", "bx--radio-button__label"]], [[8, "htmlFor", 0], [8, "id", 0]], null, null, null, null)), i0.ɵdid(5, 278528, null, 0, i1.NgClass, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2], { klass: [0, "klass"], ngClass: [1, "ngClass"] }, null), i0.ɵpod(6, { "bx--skeleton": 0 }), (_l()(), i0.ɵeld(7, 0, null, null, 0, "span", [["class", "bx--radio-button__appearance"]], null, null, null, null, null)), i0.ɵncd(null, 0)], function (_ck, _v) { var _co = _v.component; var currVal_0 = !_co.skeleton; _ck(_v, 1, 0, currVal_0); var currVal_1 = _co.skeleton; _ck(_v, 3, 0, currVal_1); var currVal_4 = "bx--radio-button__label"; var currVal_5 = _ck(_v, 6, 0, _co.skeleton); _ck(_v, 5, 0, currVal_4, currVal_5); }, function (_ck, _v) { var _co = _v.component; var currVal_2 = _co.id; var currVal_3 = i0.ɵinlineInterpolate(1, "label-", _co.id, ""); _ck(_v, 4, 0, currVal_2, currVal_3); }); }
export function View_Radio_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, "ibm-radio", [], [[1, "role", 0], [2, "bx--radio-button-wrapper", null], [2, "bx--radio-button-wrapper--label-left", null]], null, null, View_Radio_0, RenderType_Radio)), i0.ɵprd(5120, null, i2.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i3.Radio]), i0.ɵdid(2, 49152, null, 0, i3.Radio, [], null, null)], null, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 2).role; var currVal_1 = i0.ɵnov(_v, 2).hostClass; var currVal_2 = i0.ɵnov(_v, 2).labelLeft; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2); }); }
var RadioNgFactory = i0.ɵccf("ibm-radio", i3.Radio, View_Radio_Host_0, { checked: "checked", name: "name", disabled: "disabled", labelPlacement: "labelPlacement", ariaLabelledby: "ariaLabelledby", required: "required", value: "value", skeleton: "skeleton", id: "id" }, { change: "change" }, ["*"]);
export { RadioNgFactory as RadioNgFactory };
//# sourceMappingURL=radio.component.ngfactory.js.map