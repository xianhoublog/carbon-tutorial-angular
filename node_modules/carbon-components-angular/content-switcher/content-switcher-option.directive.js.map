{"version":3,"file":"content-switcher-option.directive.js","sourceRoot":"","sources":["../src/content-switcher/content-switcher-option.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EACN,SAAS,EACT,WAAW,EACX,KAAK,EACL,YAAY,EACZ,MAAM,EACN,YAAY,EACZ,MAAM,eAAe,CAAC;AAEvB;IAAA;QAkBC;;;;WAIG;QACM,SAAI,GAAG,QAAQ,CAAC;QAEzB;;WAEG;QACO,aAAQ,GAAG,IAAI,YAAY,EAAE,CAAC;QAElB,kBAAa,GAAG,0BAA0B,CAAC;QACZ,kBAAa,GAAG,KAAK,CAAC;QACjD,SAAI,GAAG,KAAK,CAAC;QACJ,iBAAY,GAAG,KAAK,CAAC;QAC1B,aAAQ,GAAG,IAAI,CAAC;QAEpC,YAAO,GAAG,KAAK,CAAC;IAa3B,CAAC;IA1CA,sBAAa,yCAAM;aAOnB;YACC,OAAO,IAAI,CAAC,OAAO,CAAC;QACrB,CAAC;QAZD;;WAEG;aACH,UAAqB,KAAc;YAClC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;QACpC,CAAC;;;OAAA;IA2BD,yCAAS,GADT;QAEC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;IAGD,uCAAO,GADP;QAEC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;;gBAhDD,SAAS,SAAC;oBACV,QAAQ,EAAE,oBAAoB;iBAC9B;;;yBAKC,KAAK;uBAgBL,KAAK;2BAKL,MAAM;gCAEN,WAAW,SAAC,OAAO;gCACnB,WAAW,SAAC,sCAAsC;uBAClD,WAAW,SAAC,WAAW;+BACvB,WAAW,SAAC,oBAAoB;2BAChC,WAAW,SAAC,eAAe;4BAI3B,YAAY,SAAC,OAAO;0BAMpB,YAAY,SAAC,OAAO;;IAKtB,4BAAC;CAAA,AAjDD,IAiDC;SA9CY,qBAAqB","sourcesContent":["import {\n\tDirective,\n\tHostBinding,\n\tInput,\n\tHostListener,\n\tOutput,\n\tEventEmitter\n} from \"@angular/core\";\n\n@Directive({\n\tselector: \"[ibmContentOption]\"\n})\nexport class ContentSwitcherOption {\n\t/**\n\t * Used to activate the option. Only one option may be `active` at a time\n\t */\n\t@Input() set active (value: boolean) {\n\t\tthis._active = value;\n\t\tthis.selectedClass = value;\n\t\tthis.ariaSelected = value;\n\t\tthis.tabindex = value ? \"0\" : \"-1\";\n\t}\n\n\tget active() {\n\t\treturn this._active;\n\t}\n\n\t/**\n\t * Internal name for the option.\n\t * Should be something that identifies the option to the application.\n\t * Accessible from the `ContentSwitcher` `selected` emitter\n\t */\n\t@Input() name = \"option\";\n\n\t/**\n\t * Emits when the option is selected.\n\t */\n\t@Output() selected = new EventEmitter();\n\n\t@HostBinding(\"class\") switcherClass = \"bx--content-switcher-btn\";\n\t@HostBinding(\"class.bx--content-switcher--selected\") selectedClass = false;\n\t@HostBinding(\"attr.role\") role = \"tab\";\n\t@HostBinding(\"attr.aria-selected\") ariaSelected = false;\n\t@HostBinding(\"attr.tabIndex\") tabindex = \"-1\";\n\n\tprotected _active = false;\n\n\t@HostListener(\"click\")\n\thostClick() {\n\t\tthis.active = true;\n\t\tthis.selected.emit(true);\n\t}\n\n\t@HostListener(\"focus\")\n\tonFocus() {\n\t\tthis.active = true;\n\t\tthis.selected.emit(true);\n\t}\n}\n"]}