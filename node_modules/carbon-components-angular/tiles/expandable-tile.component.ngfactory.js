/**
 *
 * carbon-angular v0.0.0 | expandable-tile.component.ngfactory.js
 *
 * Copyright 2014, 2020 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "./expandable-tile.component";
import * as i3 from "../i18n/i18n.service";
var styles_ExpandableTile = [];
var RenderType_ExpandableTile = i0.ɵcrt({ encapsulation: 2, styles: styles_ExpandableTile, data: {} });
export { RenderType_ExpandableTile as RenderType_ExpandableTile };
function View_ExpandableTile_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 4, ":svg:svg", [["height", "7"], ["role", "img"], ["viewBox", "0 0 12 7"], ["width", "12"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 2, ":svg:title", [], null, null, null, null, null)), (_l()(), i0.ɵted(2, null, ["", ""])), i0.ɵpid(131072, i1.AsyncPipe, [i0.ChangeDetectorRef]), (_l()(), i0.ɵeld(4, 0, null, null, 0, ":svg:path", [["d", "M6.002 5.55L11.27 0l.726.685L6.003 7 0 .685.726 0z"], ["fill-rule", "nonzero"]], null, null, null, null, null))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = i0.ɵunv(_v, 2, 0, i0.ɵnov(_v, 3).transform(_co.expand.subject)); _ck(_v, 2, 0, currVal_0); }); }
function View_ExpandableTile_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 4, ":svg:svg", [["height", "7"], ["role", "img"], ["viewBox", "0 0 12 7"], ["width", "12"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 2, ":svg:title", [], null, null, null, null, null)), (_l()(), i0.ɵted(2, null, ["", ""])), i0.ɵpid(131072, i1.AsyncPipe, [i0.ChangeDetectorRef]), (_l()(), i0.ɵeld(4, 0, null, null, 0, ":svg:path", [["d", "M6.002 5.55L11.27 0l.726.685L6.003 7 0 .685.726 0z"], ["fill-rule", "nonzero"]], null, null, null, null, null))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = i0.ɵunv(_v, 2, 0, i0.ɵnov(_v, 3).transform(_co.collapse.subject)); _ck(_v, 2, 0, currVal_0); }); }
export function View_ExpandableTile_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 13, "div", [["class", "bx--tile bx--tile--expandable"], ["role", "button"], ["tabindex", "0"]], null, [[null, "click"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("click" === en)) {
        var pd_0 = (_co.onClick() !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null)), i0.ɵdid(1, 278528, null, 0, i1.NgClass, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2], { klass: [0, "klass"], ngClass: [1, "ngClass"] }, null), i0.ɵpod(2, { "bx--tile--is-expanded": 0 }), i0.ɵdid(3, 278528, null, 0, i1.NgStyle, [i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2], { ngStyle: [0, "ngStyle"] }, null), i0.ɵpod(4, { "max-height": 0 }), (_l()(), i0.ɵeld(5, 0, null, null, 5, "button", [["class", "bx--tile__chevron"]], [[1, "aria-label", 0]], null, null, null, null)), i0.ɵpid(131072, i1.AsyncPipe, [i0.ChangeDetectorRef]), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_ExpandableTile_1)), i0.ɵdid(8, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_ExpandableTile_2)), i0.ɵdid(10, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null), (_l()(), i0.ɵeld(11, 0, null, null, 2, "div", [["class", "bx--tile-content"]], null, null, null, null, null)), i0.ɵncd(null, 0), i0.ɵncd(null, 1)], function (_ck, _v) { var _co = _v.component; var currVal_0 = "bx--tile bx--tile--expandable"; var currVal_1 = _ck(_v, 2, 0, _co.expanded); _ck(_v, 1, 0, currVal_0, currVal_1); var currVal_2 = _ck(_v, 4, 0, (_co.expandedHeight + "px")); _ck(_v, 3, 0, currVal_2); var currVal_4 = !_co.expanded; _ck(_v, 8, 0, currVal_4); var currVal_5 = _co.expanded; _ck(_v, 10, 0, currVal_5); }, function (_ck, _v) { var _co = _v.component; var currVal_3 = i0.ɵunv(_v, 5, 0, i0.ɵnov(_v, 6).transform((_co.expanded ? _co.collapse : _co.expand).subject)); _ck(_v, 5, 0, currVal_3); }); }
export function View_ExpandableTile_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "ibm-expandable-tile", [], null, null, null, View_ExpandableTile_0, RenderType_ExpandableTile)), i0.ɵdid(1, 1097728, null, 0, i2.ExpandableTile, [i3.I18n, i0.ElementRef], null, null)], null, null); }
var ExpandableTileNgFactory = i0.ɵccf("ibm-expandable-tile", i2.ExpandableTile, View_ExpandableTile_Host_0, { expanded: "expanded", translations: "translations" }, {}, [".bx--tile-content__above-the-fold", ".bx--tile-content__below-the-fold"]);
export { ExpandableTileNgFactory as ExpandableTileNgFactory };
//# sourceMappingURL=expandable-tile.component.ngfactory.js.map