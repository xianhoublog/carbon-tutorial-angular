/**
 *
 * carbon-angular v0.0.0 | file-uploader.component.ngfactory.js
 *
 * Copyright 2014, 2020 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../button/button.directive";
import * as i3 from "./file.component.ngfactory";
import * as i4 from "./file.component";
import * as i5 from "../i18n/i18n.service";
import * as i6 from "@angular/forms";
import * as i7 from "./file-uploader.component";
var styles_FileUploader = [];
var RenderType_FileUploader = i0.ɵcrt({ encapsulation: 2, styles: styles_FileUploader, data: {} });
export { RenderType_FileUploader as RenderType_FileUploader };
function View_FileUploader_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, null, null, null, null, null, null, null)), (_l()(), i0.ɵted(1, null, ["", ""]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.dropText; _ck(_v, 1, 0, currVal_0); }); }
function View_FileUploader_5(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(0, null, null, 0))], null, null); }
function View_FileUploader_4(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(16777216, null, null, 1, null, View_FileUploader_5)), i0.ɵdid(1, 540672, null, 0, i1.NgTemplateOutlet, [i0.ViewContainerRef], { ngTemplateOutlet: [0, "ngTemplateOutlet"] }, null), (_l()(), i0.ɵand(0, null, null, 0))], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.dropText; _ck(_v, 1, 0, currVal_0); }, null); }
function View_FileUploader_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 7, "label", [["class", "bx--file-browse-btn"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 6, "div", [["class", "bx--file__drop-container"], ["role", "button"]], [[1, "for", 0]], [[null, "click"], [null, "dragover"], [null, "dragleave"], [null, "drop"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("click" === en)) {
        var pd_0 = (i0.ɵnov(_v.parent, 10).click() !== false);
        ad = (pd_0 && ad);
    } if (("dragover" === en)) {
        var pd_1 = (_co.onDragOver($event) !== false);
        ad = (pd_1 && ad);
    } if (("dragleave" === en)) {
        var pd_2 = (_co.onDragLeave($event) !== false);
        ad = (pd_2 && ad);
    } if (("drop" === en)) {
        var pd_3 = (_co.onDrop($event) !== false);
        ad = (pd_3 && ad);
    } return ad; }, null, null)), i0.ɵdid(2, 278528, null, 0, i1.NgClass, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2], { klass: [0, "klass"], ngClass: [1, "ngClass"] }, null), i0.ɵpod(3, { "bx--file__drop-container--drag-over": 0 }), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_FileUploader_3)), i0.ɵdid(5, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_FileUploader_4)), i0.ɵdid(7, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_1 = "bx--file__drop-container"; var currVal_2 = _ck(_v, 3, 0, _co.dragOver); _ck(_v, 2, 0, currVal_1, currVal_2); var currVal_3 = !_co.isTemplate(_co.dropText); _ck(_v, 5, 0, currVal_3); var currVal_4 = _co.isTemplate(_co.dropText); _ck(_v, 7, 0, currVal_4); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.fileUploaderId; _ck(_v, 1, 0, currVal_0); }); }
function View_FileUploader_6(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, "button", [["type", "button"]], [[1, "for", 0], [2, "bx--btn", null], [2, "bx--btn--primary", null], [2, "bx--btn--secondary", null], [2, "bx--btn--tertiary", null], [2, "bx--btn--ghost", null], [2, "bx--btn--danger", null], [2, "bx--btn--danger--primary", null], [2, "bx--skeleton", null], [2, "bx--btn--sm", null], [2, "bx--toolbar-action", null], [2, "bx--overflow-menu", null]], [[null, "click"]], function (_v, en, $event) { var ad = true; if (("click" === en)) {
        var pd_0 = (i0.ɵnov(_v.parent, 10).click() !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null)), i0.ɵdid(1, 81920, null, 0, i2.Button, [], { ibmButton: [0, "ibmButton"], size: [1, "size"] }, null), (_l()(), i0.ɵted(2, null, [" ", " "]))], function (_ck, _v) { var _co = _v.component; var currVal_12 = _co.buttonType; var currVal_13 = _co.size; _ck(_v, 1, 0, currVal_12, currVal_13); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.fileUploaderId; var currVal_1 = i0.ɵnov(_v, 1).baseClass; var currVal_2 = i0.ɵnov(_v, 1).primaryButton; var currVal_3 = i0.ɵnov(_v, 1).secondaryButton; var currVal_4 = i0.ɵnov(_v, 1).tertiaryButton; var currVal_5 = i0.ɵnov(_v, 1).ghostButton; var currVal_6 = i0.ɵnov(_v, 1).dangerButton; var currVal_7 = i0.ɵnov(_v, 1).dangerPrimaryButton; var currVal_8 = i0.ɵnov(_v, 1).skeleton; var currVal_9 = i0.ɵnov(_v, 1).smallSize; var currVal_10 = i0.ɵnov(_v, 1).toolbarAction; var currVal_11 = i0.ɵnov(_v, 1).overflowMenu; _ck(_v, 0, 1, [currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9, currVal_10, currVal_11]); var currVal_14 = _co.buttonText; _ck(_v, 2, 0, currVal_14); }); }
function View_FileUploader_8(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "div", [["class", "bx--form-requirement"]], null, null, null, null, null)), (_l()(), i0.ɵted(1, null, [" ", " "]))], null, function (_ck, _v) { var currVal_0 = _v.parent.context.$implicit.invalidText; _ck(_v, 1, 0, currVal_0); }); }
function View_FileUploader_7(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 4, "div", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, "ibm-file", [], [[2, "bx--file__selected-file", null], [2, "bx--file__selected-file--invalid", null]], [[null, "remove"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("remove" === en)) {
        var pd_0 = (_co.removeFile(_v.context.$implicit) !== false);
        ad = (pd_0 && ad);
    } return ad; }, i3.View_FileComponent_0, i3.RenderType_FileComponent)), i0.ɵdid(2, 49152, null, 0, i4.FileComponent, [i5.I18n], { fileItem: [0, "fileItem"] }, { remove: "remove" }), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_FileUploader_8)), i0.ɵdid(4, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null)], function (_ck, _v) { var currVal_2 = _v.context.$implicit; _ck(_v, 2, 0, currVal_2); var currVal_3 = _v.context.$implicit.invalid; _ck(_v, 4, 0, currVal_3); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 2).selectedFile; var currVal_1 = i0.ɵnov(_v, 2).isInvalidText; _ck(_v, 1, 0, currVal_0, currVal_1); }); }
function View_FileUploader_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 13, null, null, null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, "strong", [["class", "bx--file--label"]], null, null, null, null, null)), (_l()(), i0.ɵted(2, null, ["", ""])), (_l()(), i0.ɵeld(3, 0, null, null, 1, "p", [["class", "bx--label-description"]], null, null, null, null, null)), (_l()(), i0.ɵted(4, null, ["", ""])), (_l()(), i0.ɵeld(5, 0, null, null, 8, "div", [["class", "bx--file"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_FileUploader_2)), i0.ɵdid(7, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_FileUploader_6)), i0.ɵdid(9, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null), (_l()(), i0.ɵeld(10, 0, [[1, 0], ["fileInput", 1]], null, 0, "input", [["class", "bx--file-input"], ["tabindex", "-1"], ["type", "file"]], [[8, "accept", 0], [8, "id", 0], [8, "multiple", 0]], [[null, "change"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("change" === en)) {
        var pd_0 = (_co.onFilesAdded() !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null)), (_l()(), i0.ɵeld(11, 0, null, null, 2, "div", [["class", "bx--file-container"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_FileUploader_7)), i0.ɵdid(13, 278528, null, 0, i1.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, "ngForOf"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_2 = _co.drop; _ck(_v, 7, 0, currVal_2); var currVal_3 = !_co.drop; _ck(_v, 9, 0, currVal_3); var currVal_7 = _co.files; _ck(_v, 13, 0, currVal_7); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.title; _ck(_v, 2, 0, currVal_0); var currVal_1 = _co.description; _ck(_v, 4, 0, currVal_1); var currVal_4 = _co.accept; var currVal_5 = _co.fileUploaderId; var currVal_6 = _co.multiple; _ck(_v, 10, 0, currVal_4, currVal_5, currVal_6); }); }
function View_FileUploader_9(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 0, "div", [["class", "bx--skeleton__text"], ["style", "width: 100px"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 0, "div", [["class", "bx--skeleton__text"], ["style", "width: 225px"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 1, "button", [["ibmButton", ""], ["skeleton", "true"]], [[2, "bx--btn", null], [2, "bx--btn--primary", null], [2, "bx--btn--secondary", null], [2, "bx--btn--tertiary", null], [2, "bx--btn--ghost", null], [2, "bx--btn--danger", null], [2, "bx--btn--danger--primary", null], [2, "bx--skeleton", null], [2, "bx--btn--sm", null], [2, "bx--toolbar-action", null], [2, "bx--overflow-menu", null]], null, null, null, null)), i0.ɵdid(3, 81920, null, 0, i2.Button, [], { ibmButton: [0, "ibmButton"], skeleton: [1, "skeleton"] }, null)], function (_ck, _v) { var currVal_11 = ""; var currVal_12 = "true"; _ck(_v, 3, 0, currVal_11, currVal_12); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 3).baseClass; var currVal_1 = i0.ɵnov(_v, 3).primaryButton; var currVal_2 = i0.ɵnov(_v, 3).secondaryButton; var currVal_3 = i0.ɵnov(_v, 3).tertiaryButton; var currVal_4 = i0.ɵnov(_v, 3).ghostButton; var currVal_5 = i0.ɵnov(_v, 3).dangerButton; var currVal_6 = i0.ɵnov(_v, 3).dangerPrimaryButton; var currVal_7 = i0.ɵnov(_v, 3).skeleton; var currVal_8 = i0.ɵnov(_v, 3).smallSize; var currVal_9 = i0.ɵnov(_v, 3).toolbarAction; var currVal_10 = i0.ɵnov(_v, 3).overflowMenu; _ck(_v, 2, 1, [currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9, currVal_10]); }); }
export function View_FileUploader_0(_l) { return i0.ɵvid(0, [i0.ɵqud(671088640, 1, { fileInput: 0 }), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_FileUploader_1)), i0.ɵdid(2, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"], ngIfElse: [1, "ngIfElse"] }, null), (_l()(), i0.ɵand(0, [["skeletonTemplate", 2]], null, 0, null, View_FileUploader_9))], function (_ck, _v) { var _co = _v.component; var currVal_0 = !_co.skeleton; var currVal_1 = i0.ɵnov(_v, 3); _ck(_v, 2, 0, currVal_0, currVal_1); }, null); }
export function View_FileUploader_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, "ibm-file-uploader", [], null, null, null, View_FileUploader_0, RenderType_FileUploader)), i0.ɵprd(5120, null, i6.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i7.FileUploader]), i0.ɵdid(2, 49152, null, 0, i7.FileUploader, [i5.I18n], null, null)], null, null); }
var FileUploaderNgFactory = i0.ɵccf("ibm-file-uploader", i7.FileUploader, View_FileUploader_Host_0, { buttonText: "buttonText", buttonType: "buttonType", title: "title", description: "description", accept: "accept", multiple: "multiple", skeleton: "skeleton", size: "size", drop: "drop", dropText: "dropText", fileUploaderId: "fileUploaderId", files: "files" }, { filesChange: "filesChange" }, []);
export { FileUploaderNgFactory as FileUploaderNgFactory };
//# sourceMappingURL=file-uploader.component.ngfactory.js.map