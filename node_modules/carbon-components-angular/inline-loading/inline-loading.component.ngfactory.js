/**
 *
 * carbon-angular v0.0.0 | inline-loading.component.ngfactory.js
 *
 * Copyright 2014, 2020 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "./inline-loading.component";
var styles_InlineLoading = [];
var RenderType_InlineLoading = i0.ɵcrt({ encapsulation: 2, styles: styles_InlineLoading, data: {} });
export { RenderType_InlineLoading as RenderType_InlineLoading };
function View_InlineLoading_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 5, "div", [["class", "bx--loading bx--loading--small"]], null, null, null, null, null)), i0.ɵdid(1, 278528, null, 0, i1.NgClass, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2], { klass: [0, "klass"], ngClass: [1, "ngClass"] }, null), i0.ɵpod(2, { "bx--loading--stop": 0 }), (_l()(), i0.ɵeld(3, 0, null, null, 2, ":svg:svg", [["class", "bx--loading__svg"], ["viewBox", "-75 -75 150 150"]], null, null, null, null, null)), (_l()(), i0.ɵeld(4, 0, null, null, 0, ":svg:circle", [["class", "bx--loading__background"], ["cx", "0"], ["cy", "0"], ["r", "30"]], null, null, null, null, null)), (_l()(), i0.ɵeld(5, 0, null, null, 0, ":svg:circle", [["class", "bx--loading__stroke"], ["cx", "0"], ["cy", "0"], ["r", "30"]], null, null, null, null, null))], function (_ck, _v) { var _co = _v.component; var currVal_0 = "bx--loading bx--loading--small"; var currVal_1 = _ck(_v, 2, 0, !_co.isActive); _ck(_v, 1, 0, currVal_0, currVal_1); }, null); }
function View_InlineLoading_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, ":svg:svg", [["class", "bx--inline-loading__checkmark-container bx--inline-loading__svg"], ["viewBox", "0 0 10 10"], ["xmlns", "http://www.w3.org/2000/svg"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 0, ":svg:polyline", [["class", "bx--inline-loading__checkmark"], ["points", "0.74 3.4 3.67 6.34 9.24 0.74"]], null, null, null, null, null))], null, null); }
function View_InlineLoading_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "p", [["class", "bx--inline-loading__text"]], null, null, null, null, null)), (_l()(), i0.ɵted(1, null, ["", ""]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.loadingText; _ck(_v, 1, 0, currVal_0); }); }
function View_InlineLoading_4(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "p", [["class", "bx--inline-loading__text"]], null, null, null, null, null)), (_l()(), i0.ɵted(1, null, ["", ""]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.successText; _ck(_v, 1, 0, currVal_0); }); }
export function View_InlineLoading_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 4, "div", [["class", "bx--inline-loading__animation"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_InlineLoading_1)), i0.ɵdid(2, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_InlineLoading_2)), i0.ɵdid(4, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_InlineLoading_3)), i0.ɵdid(6, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_InlineLoading_4)), i0.ɵdid(8, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = (_co.success === false); _ck(_v, 2, 0, currVal_0); var currVal_1 = (_co.success === true); _ck(_v, 4, 0, currVal_1); var currVal_2 = (_co.success === false); _ck(_v, 6, 0, currVal_2); var currVal_3 = (_co.success === true); _ck(_v, 8, 0, currVal_3); }, null); }
export function View_InlineLoading_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "ibm-inline-loading", [], [[2, "bx--inline-loading", null]], null, null, View_InlineLoading_0, RenderType_InlineLoading)), i0.ɵdid(1, 49152, null, 0, i2.InlineLoading, [], null, null)], null, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 1).loadingClass; _ck(_v, 0, 0, currVal_0); }); }
var InlineLoadingNgFactory = i0.ɵccf("ibm-inline-loading", i2.InlineLoading, View_InlineLoading_Host_0, { loadingText: "loadingText", successText: "successText", successDelay: "successDelay", isActive: "isActive", success: "success" }, { onSuccess: "onSuccess" }, []);
export { InlineLoadingNgFactory as InlineLoadingNgFactory };
//# sourceMappingURL=inline-loading.component.ngfactory.js.map