/**
 *
 * carbon-angular v0.0.0 | switcher-list-item.component.js
 *
 * Copyright 2014, 2020 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Component, Input, Output, EventEmitter, Optional, HostBinding } from "@angular/core";
import { DomSanitizer } from "@angular/platform-browser";
import { Router } from '@angular/router';
/**
 * Represents an item in a switcher list.
 *
 * **Note:** `ibm-product-x` selectors and components are deprecated and will be removed in the next major version
 */
var SwitcherListItem = /** @class */ (function () {
    function SwitcherListItem(domSanitizer, router) {
        this.domSanitizer = domSanitizer;
        this.router = router;
        /**
         * Enables the "active" state for an item. Commonly used to indicate the current page or selection.
         */
        this.active = false;
        /**
         * Emits the navigation status promise when the link is activated
         */
        this.navigation = new EventEmitter();
        this.itemClass = true;
        this._href = "javascript:void(0)";
    }
    Object.defineProperty(SwitcherListItem.prototype, "href", {
        get: function () {
            return this.domSanitizer.bypassSecurityTrustUrl(this._href);
        },
        /**
         * Optional link for the underlying anchor.
         */
        set: function (value) {
            this._href = value;
        },
        enumerable: true,
        configurable: true
    });
    SwitcherListItem.prototype.navigate = function (event) {
        if (this.router && this.route) {
            event.preventDefault();
            var status_1 = this.router.navigate(this.route, this.routeExtras);
            this.navigation.emit(status_1);
        }
    };
    SwitcherListItem.decorators = [
        { type: Component, args: [{
                    selector: "ibm-switcher-list-item, ibm-product-switcher-list-item, ibm-product-switcher-item",
                    template: "\n\t\t<a\n\t\t\tclass=\"bx--switcher__item-link\"\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--switcher__item-link--selected': active\n\t\t\t}\"\n\t\t\t[href]=\"href\"\n\t\t\t(click)=\"navigate($event)\">\n\t\t\t<ng-content></ng-content>\n\t\t</a>\n\t"
                },] },
    ];
    /** @nocollapse */
    SwitcherListItem.ctorParameters = function () { return [
        { type: DomSanitizer },
        { type: Router, decorators: [{ type: Optional }] }
    ]; };
    SwitcherListItem.propDecorators = {
        active: [{ type: Input }],
        route: [{ type: Input }],
        routeExtras: [{ type: Input }],
        href: [{ type: Input }],
        navigation: [{ type: Output }],
        itemClass: [{ type: HostBinding, args: ["class.bx--switcher__item",] }]
    };
    return SwitcherListItem;
}());
export { SwitcherListItem };
//# sourceMappingURL=switcher-list-item.component.js.map