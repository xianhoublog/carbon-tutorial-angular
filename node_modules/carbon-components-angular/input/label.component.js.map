{"version":3,"file":"label.component.js","sourceRoot":"","sources":["../src/input/label.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACN,SAAS,EACT,KAAK,EAEL,UAAU,EACV,WAAW,EACX,WAAW,EACX,SAAS,EACT,MAAM,eAAe,CAAC;AAEvB;;;;;;;;;;;;;;;;;;;;;GAqBG;AACH;IA6DC;;OAEG;IACH;QAlCA;;;WAGG;QACH,iBAAY,GAAG,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC;QAEjD;;WAEG;QACM,eAAU,GAAyC,EAAE,CAAC;QAC/D;;WAEG;QACM,aAAQ,GAAG,KAAK,CAAC;QAS1B;;WAEG;QACM,YAAO,GAAG,KAAK,CAAC;QAIW,eAAU,GAAG,IAAI,CAAC;QAMrD,KAAK,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED;;OAEG;IACH,kCAAkB,GAAlB;QACC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IACtG,CAAC;IAEM,0BAAU,GAAjB,UAAkB,KAAK;QACtB,OAAO,KAAK,YAAY,WAAW,CAAC;IACrC,CAAC;IAnDD;;OAEG;IACI,kBAAY,GAAG,CAAC,CAAC;;gBA7BxB,SAAS,SAAC;oBACV,QAAQ,EAAE,WAAW;oBACrB,QAAQ,EAAE,43BAqBT;iBACD;;;;;6BAeC,KAAK;2BAIL,KAAK;6BAIL,KAAK;8BAIL,KAAK;0BAIL,KAAK;0BAEL,SAAS,SAAC,SAAS;6BAEnB,WAAW,SAAC,qBAAqB;;IAmBnC,YAAC;CAAA,AA9ED,IA8EC;SArDY,KAAK","sourcesContent":["import {\n\tComponent,\n\tInput,\n\tAfterContentInit,\n\tElementRef,\n\tHostBinding,\n\tTemplateRef,\n\tViewChild\n} from \"@angular/core\";\n\n/**\n * [See demo](../../?path=/story/input--label)\n *\n * ```html\n * <ibm-label labelState=\"success\">\n * \t<label label>Field with success</label>\n * \t<input type=\"text\" class=\"input-field\">\n * </ibm-label>\n *\n * <ibm-label labelState=\"warning\">\n * \t<label label>Field with warning</label>\n * \t<input type=\"text\" class=\"input-field\">\n * </ibm-label>\n *\n * <ibm-label labelState=\"error\">\n * \t<label label>Field with error</label>\n * \t<input type=\"text\" class=\"input-field\">\n * </ibm-label>\n * ```\n *\n * <example-url>../../iframe.html?id=input--label</example-url>\n */\n@Component({\n\tselector: \"ibm-label\",\n\ttemplate: `\n\t\t<label\n\t\t\t[for]=\"labelInputID\"\n\t\t\tclass=\"bx--label\"\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--skeleton': skeleton\n\t\t\t}\">\n\t\t\t<ng-content></ng-content>\n\t\t</label>\n\t\t<div *ngIf=\"!skeleton\" class=\"bx--form__helper-text\">{{helperText}}</div>\n\t\t<div class=\"bx--text-input__field-wrapper\" [attr.data-invalid]=\"(invalid ? true : null)\" #wrapper>\n\t\t\t<ibm-icon-warning-filled16\n\t\t\t\t*ngIf=\"invalid\"\n\t\t\t\tclass=\"bx--text-input__invalid-icon bx--text-area__invalid-icon\">\n\t\t\t</ibm-icon-warning-filled16>\n\t\t\t<ng-content select=\"input,textarea,div\"></ng-content>\n\t\t</div>\n\t\t<div *ngIf=\"invalid\" class=\"bx--form-requirement\">\n\t\t\t<ng-container *ngIf=\"!isTemplate(invalidText)\">{{invalidText}}</ng-container>\n\t\t\t<ng-template *ngIf=\"isTemplate(invalidText)\" [ngTemplateOutlet]=\"invalidText\"></ng-template>\n\t\t</div>\n\t`\n})\nexport class Label implements AfterContentInit {\n\t/**\n\t * Used to build the id of the input item associated with the `Label`.\n\t */\n\tstatic labelCounter = 0;\n\t/**\n\t * The id of the input item associated with the `Label`. This value is also used to associate the `Label` with\n\t * its input counterpart through the 'for' attribute.\n\t */\n\tlabelInputID = \"ibm-label-\" + Label.labelCounter;\n\n\t/**\n\t * State of the `Label` will determine the styles applied.\n\t */\n\t@Input() labelState: \"success\" | \"warning\" | \"error\" | \"\" = \"\";\n\t/**\n\t * Set to `true` for a loading label.\n\t */\n\t@Input() skeleton = false;\n\t/**\n\t * Optional helper text that appears under the label.\n\t */\n\t@Input() helperText: string;\n\t/**\n\t * Sets the invalid text.\n\t */\n\t@Input() invalidText: string | TemplateRef<any>;\n\t/**\n\t * Set to `true` for an invalid label component.\n\t */\n\t@Input() invalid = false;\n\n\t@ViewChild(\"wrapper\") wrapper: ElementRef<HTMLDivElement>;\n\n\t@HostBinding(\"class.bx--form-item\") labelClass = true;\n\n\t/**\n\t * Creates an instance of Label.\n\t */\n\tconstructor() {\n\t\tLabel.labelCounter++;\n\t}\n\n\t/**\n\t * Sets the id on the input item associated with the `Label`.\n\t */\n\tngAfterContentInit() {\n\t\tthis.wrapper.nativeElement.querySelector(\"input,textarea,div\").setAttribute(\"id\", this.labelInputID);\n\t}\n\n\tpublic isTemplate(value) {\n\t\treturn value instanceof TemplateRef;\n\t}\n}\n"]}