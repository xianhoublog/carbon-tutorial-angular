import { NgModule, Component, Directive, ElementRef, Input } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var AddFilledComponent = /** @class */ (function () {
    function AddFilledComponent() {
        this.focusable = false;
    }
    AddFilledComponent.decorators = [
        { type: Component, args: [{
                    selector: "ibm-icon-add-filled",
                    template: "\n    <svg\n      ibmIconAddFilled\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
                },] },
    ];
    AddFilledComponent.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        focusable: [{ type: Input }],
        innerClass: [{ type: Input }],
        size: [{ type: Input }]
    };
    return AddFilledComponent;
}());
export { AddFilledComponent };
var AddFilledDirective = /** @class */ (function () {
    function AddFilledDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "16": {
                metadata: { "filename": "add--filled.svg", "basename": "add--filled", "size": 16, "prefix": ["16"], "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 16 16", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M8,1C4.2,1,1,4.2,1,8s3.2,7,7,7s7-3.2,7-7S11.8,1,8,1z M12,9H9v3H7V9H4V7h3V4h2v3h3V9z" } }], "name": "add--filled", "size": 16 }, "moduleName": "AddFilled16", "outputOptions": { "file": "ts/add--filled/16.ts" }, "namespace": "add--filled" },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" aria-hidden=\"true\"><path d=\"M8,1C4.2,1,1,4.2,1,8s3.2,7,7,7s7-3.2,7-7S11.8,1,8,1z M12,9H9v3H7V9H4V7h3V4h2v3h3V9z\"></path></svg>"
            },
            "32": {
                metadata: { "filename": "add--filled.svg", "basename": "add--filled", "size": 32, "prefix": ["32"], "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M16,2C8.4,2,2,8.4,2,16s6.4,14,14,14s14-6.4,14-14S23.6,2,16,2z M22,17h-5v5h-2v-5h-5v-2h5v-5h2v5h5V17z" } }, { "elem": "path", "attrs": { "d": "M22 17L17 17 17 22 15 22 15 17 10 17 10 15 15 15 15 10 17 10 17 15 22 15z", "data-icon-path": "inner-path", "opacity": "0" } }], "name": "add--filled", "size": 32 }, "moduleName": "AddFilled32", "outputOptions": { "file": "ts/add--filled/32.ts" }, "namespace": "add--filled" },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M16,2C8.4,2,2,8.4,2,16s6.4,14,14,14s14-6.4,14-14S23.6,2,16,2z M22,17h-5v5h-2v-5h-5v-2h5v-5h2v5h5V17z\"></path><path d=\"M22 17L17 17 17 22 15 22 15 17 10 17 10 15 15 15 15 10 17 10 17 15 22 15z\" data-icon-path=\"inner-path\" opacity=\"0\"></path></svg>"
            },
            "24": {
                metadata: { "filename": "add--filled.svg", "basename": "add--filled", "size": 24, "prefix": ["32"], "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M16,2C8.4,2,2,8.4,2,16s6.4,14,14,14s14-6.4,14-14S23.6,2,16,2z M22,17h-5v5h-2v-5h-5v-2h5v-5h2v5h5V17z" } }, { "elem": "path", "attrs": { "d": "M22 17L17 17 17 22 15 22 15 17 10 17 10 15 15 15 15 10 17 10 17 15 22 15z", "data-icon-path": "inner-path", "opacity": "0" } }], "name": "add--filled", "size": 24 }, "moduleName": "AddFilled24", "original": 32, "outputOptions": { "file": "ts/add--filled/24.ts" }, "namespace": "add--filled" },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M16,2C8.4,2,2,8.4,2,16s6.4,14,14,14s14-6.4,14-14S23.6,2,16,2z M22,17h-5v5h-2v-5h-5v-2h5v-5h2v5h5V17z\"></path><path d=\"M22 17L17 17 17 22 15 22 15 17 10 17 10 15 15 15 15 10 17 10 17 15 22 15z\" data-icon-path=\"inner-path\" opacity=\"0\"></path></svg>"
            },
            "20": {
                metadata: { "filename": "add--filled.svg", "basename": "add--filled", "size": 20, "prefix": ["32"], "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M16,2C8.4,2,2,8.4,2,16s6.4,14,14,14s14-6.4,14-14S23.6,2,16,2z M22,17h-5v5h-2v-5h-5v-2h5v-5h2v5h5V17z" } }, { "elem": "path", "attrs": { "d": "M22 17L17 17 17 22 15 22 15 17 10 17 10 15 15 15 15 10 17 10 17 15 22 15z", "data-icon-path": "inner-path", "opacity": "0" } }], "name": "add--filled", "size": 20 }, "moduleName": "AddFilled20", "original": 32, "outputOptions": { "file": "ts/add--filled/20.ts" }, "namespace": "add--filled" },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M16,2C8.4,2,2,8.4,2,16s6.4,14,14,14s14-6.4,14-14S23.6,2,16,2z M22,17h-5v5h-2v-5h-5v-2h5v-5h2v5h5V17z\"></path><path d=\"M22 17L17 17 17 22 15 22 15 17 10 17 10 15 15 15 15 10 17 10 17 15 22 15z\" data-icon-path=\"inner-path\" opacity=\"0\"></path></svg>"
            },
        };
    }
    AddFilledDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            AddFilledDirective.titleIdCounter++;
            title.setAttribute("id", "add-filled-" + AddFilledDirective.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "add-filled-" + AddFilledDirective.titleIdCounter);
        }
    };
    AddFilledDirective.titleIdCounter = 0;
    AddFilledDirective.decorators = [
        { type: Directive, args: [{
                    selector: "[ibmIconAddFilled]"
                },] },
    ];
    /** @nocollapse */
    AddFilledDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    AddFilledDirective.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        isFocusable: [{ type: Input }],
        size: [{ type: Input }]
    };
    return AddFilledDirective;
}());
export { AddFilledDirective };
var AddFilledModule = /** @class */ (function () {
    function AddFilledModule() {
    }
    AddFilledModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        AddFilledComponent,
                        AddFilledDirective,
                    ],
                    exports: [
                        AddFilledComponent,
                        AddFilledDirective,
                    ]
                },] },
    ];
    return AddFilledModule;
}());
export { AddFilledModule };
//# sourceMappingURL=index.js.map