{"version":3,"file":"16.js","sourceRoot":"","sources":["../../../ts/fingerprint-recognition/16.ts"],"names":[],"mappings":"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","sourcesContent":["\nimport {\n  NgModule,\n  Component,\n  Directive,\n  ElementRef,\n  Input,\n  AfterViewInit\n} from \"@angular/core\";\nimport { getAttributes } from \"@carbon/icon-helpers\";\n\n@Component({\n\tselector: \"ibm-icon-fingerprint-recognition16\",\n  template: `\n    <svg\n      ibmIconFingerprintRecognition16\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  `\n})\nexport class FingerprintRecognition16 {\n  @Input() ariaLabel: string;\n  @Input() ariaLabelledby: string;\n  @Input() ariaHidden: boolean;\n  @Input() title: string;\n  @Input() focusable: boolean = false;\n  @Input() innerClass: string;\n}\n\n@Directive({\n  selector: \"[ibmIconFingerprintRecognition16]\"\n})\nexport class FingerprintRecognition16Directive implements AfterViewInit {\n  static titleIdCounter = 0;\n\n  @Input() ariaLabel: string;\n  @Input() ariaLabelledby: string;\n  @Input() ariaHidden: boolean;\n  @Input() title: string;\n  @Input() isFocusable: boolean = false;\n\n  constructor(protected elementRef: ElementRef) {}\n\n\tngAfterViewInit() {\n    const svg = this.elementRef.nativeElement;\n    svg.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n\n    const domParser = new DOMParser();\n    const rawSVG = `<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M7,5.21a.77.77,0,0,1-.46-1.38A15.46,15.46,0,0,1,16,1c2.66,0,6.48.45,9.5,2.62a.77.77,0,0,1,.18,1.07.78.78,0,0,1-1.08.17A15,15,0,0,0,16,2.53,14,14,0,0,0,7.5,5.05.74.74,0,0,1,7,5.21Z\"></path><path d=\"M28.23,12.26a.78.78,0,0,1-.63-.33C25.87,9.49,22.78,6.24,16,6.24a14,14,0,0,0-11.63,5.7.77.77,0,0,1-1.07.17A.76.76,0,0,1,3.15,11,15.54,15.54,0,0,1,16,4.71c5.61,0,9.81,2.08,12.84,6.34a.77.77,0,0,1-.19,1.07A.79.79,0,0,1,28.23,12.26Z\"></path><path d=\"M12.28,31a.78.78,0,0,1-.72-.49.75.75,0,0,1,.44-1c4.37-1.68,7-5.12,7-9.21a2.8,2.8,0,0,0-3-3c-1.86,0-2.76,1-3,3.35a4.27,4.27,0,0,1-4.52,3.83,4.27,4.27,0,0,1-4.32-4.59A11.71,11.71,0,0,1,16,8.39a12,12,0,0,1,12,11.93,18.66,18.66,0,0,1-1.39,6.5.78.78,0,0,1-1,.41.76.76,0,0,1-.41-1,17.25,17.25,0,0,0,1.27-5.91A10.45,10.45,0,0,0,16,9.92a10.18,10.18,0,0,0-10.38,10,2.77,2.77,0,0,0,2.79,3.06,2.74,2.74,0,0,0,3-2.48c.36-3.11,1.89-4.69,4.56-4.69a4.31,4.31,0,0,1,4.52,4.56c0,4.74-3,8.72-8,10.63A.92.92,0,0,1,12.28,31Z\"></path><path d=\"M19.77,30.28a.81.81,0,0,1-.52-.2.76.76,0,0,1,0-1.08,12.63,12.63,0,0,0,3.54-8.68c0-1.56-.48-6.65-6.7-6.65a6.83,6.83,0,0,0-4.94,1.87A6.17,6.17,0,0,0,9.32,20a.77.77,0,0,1-.77.76h0A.76.76,0,0,1,7.78,20,7.73,7.73,0,0,1,10,14.46a8.34,8.34,0,0,1,6-2.32c6.08,0,8.24,4.4,8.24,8.18A14.09,14.09,0,0,1,20.34,30,.75.75,0,0,1,19.77,30.28Z\"></path><path d=\"M8.66,27.74a14.14,14.14,0,0,1-1.56-.09.76.76,0,1,1,.17-1.52c2.49.28,4.45-.16,5.84-1.32a6.37,6.37,0,0,0,2.12-4.53.75.75,0,0,1,.82-.71.78.78,0,0,1,.72.81A7.89,7.89,0,0,1,14.09,26,8.2,8.2,0,0,1,8.66,27.74Z\"></path></svg>`;\n    const svgElement = domParser.parseFromString(rawSVG, \"image/svg+xml\").documentElement;\n\n    let node = svgElement.firstChild;\n    while (node) {\n      // importNode makes a clone of the node\n      // this ensures we keep looping over the nodes in the parsed document\n      svg.appendChild(svg.ownerDocument.importNode(node, true));\n      node = node.nextSibling;\n    }\n\n    const attributes = getAttributes({\n      width: 16,\n      height: 16,\n      viewBox: \"0 0 32 32\",\n      title: this.title,\n      \"aria-label\": this.ariaLabel,\n      \"aria-labelledby\": this.ariaLabelledby,\n      \"aria-hidden\": this.ariaHidden,\n      focusable: this.isFocusable.toString()\n    });\n\n    const attrKeys = Object.keys(attributes);\n    for (let i = 0; i < attrKeys.length; i++) {\n      const key = attrKeys[i];\n      const value = attributes[key];\n      if (key === \"title\") {\n        continue;\n      }\n      if (value) {\n        svg.setAttribute(key, value);\n      }\n    }\n\n    if (attributes.title) {\n      const title = document.createElement(\"title\");\n      title.textContent = attributes.title;\n      FingerprintRecognition16Directive.titleIdCounter++;\n      title.setAttribute(\"id\", `fingerprint-recognition16-${FingerprintRecognition16Directive.titleIdCounter}`);\n      svg.appendChild(title);\n      svg.setAttribute(\"aria-labelledby\", `fingerprint-recognition16-${FingerprintRecognition16Directive.titleIdCounter}`);\n    }\n\t}\n}\n\n@NgModule({\n  declarations: [\n    FingerprintRecognition16,\n    FingerprintRecognition16Directive\n  ],\n  exports: [\n    FingerprintRecognition16,\n    FingerprintRecognition16Directive\n  ]\n})\nexport class FingerprintRecognition16Module {}\n"]}