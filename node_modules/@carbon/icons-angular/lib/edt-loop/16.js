import { NgModule, Component, Directive, ElementRef, Input } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var EdtLoop16 = /** @class */ (function () {
    function EdtLoop16() {
        this.focusable = false;
    }
    EdtLoop16.decorators = [
        { type: Component, args: [{
                    selector: "ibm-icon-edt-loop16",
                    template: "\n    <svg\n      ibmIconEdtLoop16\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
                },] },
    ];
    EdtLoop16.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        focusable: [{ type: Input }],
        innerClass: [{ type: Input }]
    };
    return EdtLoop16;
}());
export { EdtLoop16 };
var EdtLoop16Directive = /** @class */ (function () {
    function EdtLoop16Directive(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
    }
    EdtLoop16Directive.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var domParser = new DOMParser();
        var rawSVG = "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M23.625,22.5875a6.1287,6.1287,0,0,1-4.5-1.9l-3.1-3.2-3.1,3.2a6.4582,6.4582,0,0,1-9.1,0,7.028,7.028,0,0,1-1.8-4.7,6.6547,6.6547,0,0,1,1.9-4.7,6.3375,6.3375,0,0,1,9,0l3.1,3.2,3.1-3.2a6.3375,6.3375,0,0,1,9,0,6.8282,6.8282,0,0,1,0,9.4A6.5418,6.5418,0,0,1,23.625,22.5875Zm-6.2-6.6,3.1,3.3a4.4061,4.4061,0,0,0,6.2,0,4.9077,4.9077,0,0,0,0-6.6,4.4061,4.4061,0,0,0-6.2,0Zm-9-4.6a4.1582,4.1582,0,0,0-3.1,1.3,4.8385,4.8385,0,0,0,0,6.6,4.4061,4.4061,0,0,0,6.2,0l3.1-3.3-3.1-3.3A4.7706,4.7706,0,0,0,8.425,11.3875Z\"></path></svg>";
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: 16,
            height: 16,
            viewBox: "0 0 32 32",
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            EdtLoop16Directive.titleIdCounter++;
            title.setAttribute("id", "edt-loop16-" + EdtLoop16Directive.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "edt-loop16-" + EdtLoop16Directive.titleIdCounter);
        }
    };
    EdtLoop16Directive.titleIdCounter = 0;
    EdtLoop16Directive.decorators = [
        { type: Directive, args: [{
                    selector: "[ibmIconEdtLoop16]"
                },] },
    ];
    /** @nocollapse */
    EdtLoop16Directive.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    EdtLoop16Directive.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        isFocusable: [{ type: Input }]
    };
    return EdtLoop16Directive;
}());
export { EdtLoop16Directive };
var EdtLoop16Module = /** @class */ (function () {
    function EdtLoop16Module() {
    }
    EdtLoop16Module.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        EdtLoop16,
                        EdtLoop16Directive
                    ],
                    exports: [
                        EdtLoop16,
                        EdtLoop16Directive
                    ]
                },] },
    ];
    return EdtLoop16Module;
}());
export { EdtLoop16Module };
//# sourceMappingURL=16.js.map