import { NgModule, Component, Directive, ElementRef, Input } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var Humidity16 = /** @class */ (function () {
    function Humidity16() {
        this.focusable = false;
    }
    Humidity16.decorators = [
        { type: Component, args: [{
                    selector: "ibm-icon-humidity16",
                    template: "\n    <svg\n      ibmIconHumidity16\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
                },] },
    ];
    Humidity16.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        focusable: [{ type: Input }],
        innerClass: [{ type: Input }]
    };
    return Humidity16;
}());
export { Humidity16 };
var Humidity16Directive = /** @class */ (function () {
    function Humidity16Directive(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
    }
    Humidity16Directive.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var domParser = new DOMParser();
        var rawSVG = "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M23.5 30H8.5A6.4944 6.4944 0 0 1 7.2 17.1415a8.9943 8.9943 0 0 1 17.6006 0A6.4945 6.4945 0 0 1 23.5 30zM16 12.0053a6.9987 6.9987 0 0 0-6.9414 6.1431L8.96 18.96l-.8155.0639A4.4947 4.4947 0 0 0 8.5 28h15a4.4947 4.4947 0 0 0 .3564-8.9757L23.041 18.96l-.0986-.812A7.0012 7.0012 0 0 0 16 12.0053zM26.0435 11.9882h-.0879A3.9683 3.9683 0 0 1 22 8.0912a3.8761 3.8761 0 0 1 .8057-2.3733l2.3813-3.3355a1.0354 1.0354 0 0 1 1.626 0l2.3838 3.337A3.8667 3.8667 0 0 1 30 8.0736 3.9723 3.9723 0 0 1 26.0435 11.9882zM26 4.6877l-1.57 2.1985A1.9233 1.9233 0 0 0 24 8.0736a1.9456 1.9456 0 0 0 1.9854 1.9093h.0293A1.9742 1.9742 0 0 0 28 8.056a1.8373 1.8373 0 0 0-.3848-1.1086c-.0136-.0171-.0478-.0646-.06-.0822z\"></path></svg>";
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: 16,
            height: 16,
            viewBox: "0 0 32 32",
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            Humidity16Directive.titleIdCounter++;
            title.setAttribute("id", "humidity16-" + Humidity16Directive.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "humidity16-" + Humidity16Directive.titleIdCounter);
        }
    };
    Humidity16Directive.titleIdCounter = 0;
    Humidity16Directive.decorators = [
        { type: Directive, args: [{
                    selector: "[ibmIconHumidity16]"
                },] },
    ];
    /** @nocollapse */
    Humidity16Directive.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    Humidity16Directive.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        isFocusable: [{ type: Input }]
    };
    return Humidity16Directive;
}());
export { Humidity16Directive };
var Humidity16Module = /** @class */ (function () {
    function Humidity16Module() {
    }
    Humidity16Module.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        Humidity16,
                        Humidity16Directive
                    ],
                    exports: [
                        Humidity16,
                        Humidity16Directive
                    ]
                },] },
    ];
    return Humidity16Module;
}());
export { Humidity16Module };
//# sourceMappingURL=16.js.map