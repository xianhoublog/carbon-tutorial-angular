import { NgModule, Component, Directive, ElementRef, Input } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var PersonFavorite32 = /** @class */ (function () {
    function PersonFavorite32() {
        this.focusable = false;
    }
    PersonFavorite32.decorators = [
        { type: Component, args: [{
                    selector: "ibm-icon-person-favorite32",
                    template: "\n    <svg\n      ibmIconPersonFavorite32\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
                },] },
    ];
    PersonFavorite32.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        focusable: [{ type: Input }],
        innerClass: [{ type: Input }]
    };
    return PersonFavorite32;
}());
export { PersonFavorite32 };
var PersonFavorite32Directive = /** @class */ (function () {
    function PersonFavorite32Directive(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
    }
    PersonFavorite32Directive.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var domParser = new DOMParser();
        var rawSVG = "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M10 31H6a2.0059 2.0059 0 0 1-2-2V22a2.0059 2.0059 0 0 1-2-2V14a2.9465 2.9465 0 0 1 3-3h6a2.9465 2.9465 0 0 1 3 3v6a2.0059 2.0059 0 0 1-2 2v7A2.0059 2.0059 0 0 1 10 31zM5 13a.9448.9448 0 0 0-1 1v6H6v9h4V20h2V14a.9448.9448 0 0 0-1-1zM8 10a4 4 0 1 1 4-4A4.0045 4.0045 0 0 1 8 10zM8 4a2 2 0 1 0 2 2A2.002 2.002 0 0 0 8 4zM28.7663 4.2558A4.2121 4.2121 0 0 0 23 4.0321a4.2121 4.2121 0 0 0-5.7663.2237 4.319 4.319 0 0 0 0 6.0447L22.998 16.14 23 16.1376l.002.0019 5.7643-5.839A4.319 4.319 0 0 0 28.7663 4.2558zM27.342 8.8948l-4.34 4.3973L23 13.29l-.002.002-4.34-4.3973a2.3085 2.3085 0 0 1 0-3.2338 2.2639 2.2639 0 0 1 3.1561 0l1.181 1.2074L23 6.8634l.0049.005 1.181-1.2074a2.2639 2.2639 0 0 1 3.1561 0A2.3085 2.3085 0 0 1 27.342 8.8948z\"></path></svg>";
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: 32,
            height: 32,
            viewBox: "0 0 32 32",
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            PersonFavorite32Directive.titleIdCounter++;
            title.setAttribute("id", "person-favorite32-" + PersonFavorite32Directive.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "person-favorite32-" + PersonFavorite32Directive.titleIdCounter);
        }
    };
    PersonFavorite32Directive.titleIdCounter = 0;
    PersonFavorite32Directive.decorators = [
        { type: Directive, args: [{
                    selector: "[ibmIconPersonFavorite32]"
                },] },
    ];
    /** @nocollapse */
    PersonFavorite32Directive.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    PersonFavorite32Directive.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        isFocusable: [{ type: Input }]
    };
    return PersonFavorite32Directive;
}());
export { PersonFavorite32Directive };
var PersonFavorite32Module = /** @class */ (function () {
    function PersonFavorite32Module() {
    }
    PersonFavorite32Module.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        PersonFavorite32,
                        PersonFavorite32Directive
                    ],
                    exports: [
                        PersonFavorite32,
                        PersonFavorite32Directive
                    ]
                },] },
    ];
    return PersonFavorite32Module;
}());
export { PersonFavorite32Module };
//# sourceMappingURL=32.js.map