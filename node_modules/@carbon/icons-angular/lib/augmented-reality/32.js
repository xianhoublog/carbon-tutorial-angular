import { NgModule, Component, Directive, ElementRef, Input } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var AugmentedReality32 = /** @class */ (function () {
    function AugmentedReality32() {
        this.focusable = false;
    }
    AugmentedReality32.decorators = [
        { type: Component, args: [{
                    selector: "ibm-icon-augmented-reality32",
                    template: "\n    <svg\n      ibmIconAugmentedReality32\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
                },] },
    ];
    AugmentedReality32.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        focusable: [{ type: Input }],
        innerClass: [{ type: Input }]
    };
    return AugmentedReality32;
}());
export { AugmentedReality32 };
var AugmentedReality32Directive = /** @class */ (function () {
    function AugmentedReality32Directive(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
    }
    AugmentedReality32Directive.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var domParser = new DOMParser();
        var rawSVG = "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M27.4473,9.1055l-6-3a1.0008,1.0008,0,0,0-.8946,0l-6,3A1,1,0,0,0,14,10v7a1,1,0,0,0,.5527.8945l6,3a1.001,1.001,0,0,0,.8946,0l6-3A1,1,0,0,0,28,17V10A1,1,0,0,0,27.4473,9.1055ZM21,8.1182,24.7637,10,21,11.8818,17.2363,10Zm-5,3.5,4,2v4.7636l-4-2Zm6,6.7636V13.6182l4-2v4.7636Z\"></path><circle cx=\"13.5\" cy=\"24.5\" r=\"1.5\"></circle><path d=\"M20,30H7a2.0023,2.0023,0,0,1-2-2V4A2.0023,2.0023,0,0,1,7,2H20V4H7V28H20V24h2v4A2.0023,2.0023,0,0,1,20,30Z\"></path></svg>";
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: 32,
            height: 32,
            viewBox: "0 0 32 32",
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            AugmentedReality32Directive.titleIdCounter++;
            title.setAttribute("id", "augmented-reality32-" + AugmentedReality32Directive.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "augmented-reality32-" + AugmentedReality32Directive.titleIdCounter);
        }
    };
    AugmentedReality32Directive.titleIdCounter = 0;
    AugmentedReality32Directive.decorators = [
        { type: Directive, args: [{
                    selector: "[ibmIconAugmentedReality32]"
                },] },
    ];
    /** @nocollapse */
    AugmentedReality32Directive.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    AugmentedReality32Directive.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        isFocusable: [{ type: Input }]
    };
    return AugmentedReality32Directive;
}());
export { AugmentedReality32Directive };
var AugmentedReality32Module = /** @class */ (function () {
    function AugmentedReality32Module() {
    }
    AugmentedReality32Module.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        AugmentedReality32,
                        AugmentedReality32Directive
                    ],
                    exports: [
                        AugmentedReality32,
                        AugmentedReality32Directive
                    ]
                },] },
    ];
    return AugmentedReality32Module;
}());
export { AugmentedReality32Module };
//# sourceMappingURL=32.js.map