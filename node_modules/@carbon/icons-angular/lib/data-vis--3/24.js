import { NgModule, Component, Directive, ElementRef, Input } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var DataVis_324 = /** @class */ (function () {
    function DataVis_324() {
        this.focusable = false;
    }
    DataVis_324.decorators = [
        { type: Component, args: [{
                    selector: "ibm-icon-data-vis-324",
                    template: "\n    <svg\n      ibmIconDataVis_324\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
                },] },
    ];
    DataVis_324.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        focusable: [{ type: Input }],
        innerClass: [{ type: Input }]
    };
    return DataVis_324;
}());
export { DataVis_324 };
var DataVis_324Directive = /** @class */ (function () {
    function DataVis_324Directive(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
    }
    DataVis_324Directive.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var domParser = new DOMParser();
        var rawSVG = "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M28,3a2.9913,2.9913,0,0,0-2.8163,2H21.858a3.9807,3.9807,0,0,0-7.716,0H9.858A3.9916,3.9916,0,1,0,5,9.858v4.284a3.9807,3.9807,0,0,0,0,7.716v3.3257a3,3,0,1,0,2,0V21.858a3.978,3.978,0,0,0,1.6729-.9034l3.3638,1.6819A2.9635,2.9635,0,0,0,12,23a3.0117,3.0117,0,1,0,.9221-2.1572L9.7744,19.269A3.95,3.95,0,0,0,10,18a3.9963,3.9963,0,0,0-3-3.858V9.858A3.9947,3.9947,0,0,0,9.858,7h4.284a3.9366,3.9366,0,0,0,4.7816,2.8818l1.8118,3.1705a3.0451,3.0451,0,1,0,1.7326-.9987L20.6893,8.941A3.9839,3.9839,0,0,0,21.858,7h3.3257A2.995,2.995,0,1,0,28,3ZM8,18a2,2,0,1,1-2-2A2.0023,2.0023,0,0,1,8,18ZM6,8A2,2,0,1,1,8,6,2.002,2.002,0,0,1,6,8ZM16,6a2,2,0,1,1,2,2A2.002,2.002,0,0,1,16,6Z\"></path></svg>";
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: 24,
            height: 24,
            viewBox: "0 0 32 32",
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            DataVis_324Directive.titleIdCounter++;
            title.setAttribute("id", "data-vis-324-" + DataVis_324Directive.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "data-vis-324-" + DataVis_324Directive.titleIdCounter);
        }
    };
    DataVis_324Directive.titleIdCounter = 0;
    DataVis_324Directive.decorators = [
        { type: Directive, args: [{
                    selector: "[ibmIconDataVis_324]"
                },] },
    ];
    /** @nocollapse */
    DataVis_324Directive.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    DataVis_324Directive.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        isFocusable: [{ type: Input }]
    };
    return DataVis_324Directive;
}());
export { DataVis_324Directive };
var DataVis_324Module = /** @class */ (function () {
    function DataVis_324Module() {
    }
    DataVis_324Module.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        DataVis_324,
                        DataVis_324Directive
                    ],
                    exports: [
                        DataVis_324,
                        DataVis_324Directive
                    ]
                },] },
    ];
    return DataVis_324Module;
}());
export { DataVis_324Module };
//# sourceMappingURL=24.js.map