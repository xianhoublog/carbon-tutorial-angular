import { NgModule, Component, Directive, ElementRef, Input } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var Hearing24 = /** @class */ (function () {
    function Hearing24() {
        this.focusable = false;
    }
    Hearing24.decorators = [
        { type: Component, args: [{
                    selector: "ibm-icon-hearing24",
                    template: "\n    <svg\n      ibmIconHearing24\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
                },] },
    ];
    Hearing24.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        focusable: [{ type: Input }],
        innerClass: [{ type: Input }]
    };
    return Hearing24;
}());
export { Hearing24 };
var Hearing24Directive = /** @class */ (function () {
    function Hearing24Directive(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
    }
    Hearing24Directive.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var domParser = new DOMParser();
        var rawSVG = "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M18,30V28A10.0114,10.0114,0,0,0,28,18h2A12.0134,12.0134,0,0,1,18,30Z\"></path><path d=\"M18,26V24a6.0066,6.0066,0,0,0,6-6h2A8.0092,8.0092,0,0,1,18,26Z\"></path><path d=\"M18 22V20a2.0023 2.0023 0 0 0 2-2h2A4.0042 4.0042 0 0 1 18 22zM10 2a9.01 9.01 0 0 0-9 9H3a7 7 0 0 1 14 0 7.09 7.09 0 0 1-3.501 6.1348L13 17.4229v3.0732a2.9354 2.9354 0 0 1-.9009 2.1514 4.1824 4.1824 0 0 1-4.6318 1.03A4.0918 4.0918 0 0 1 5 20H3a6.1156 6.1156 0 0 0 3.6694 5.5117 5.7822 5.7822 0 0 0 2.3145.4863A6.5854 6.5854 0 0 0 13.4624 24.11 4.94 4.94 0 0 0 15 20.4961V18.5537A9.1077 9.1077 0 0 0 19 11 9.01 9.01 0 0 0 10 2z\"></path><path d=\"M9.28,8.0825A3.0061,3.0061,0,0,1,13,11h2a4.9786,4.9786,0,0,0-1.8843-3.9111A5.0414,5.0414,0,0,0,8.835,6.1323,4.95,4.95,0,0,0,5.1323,9.835,5.0318,5.0318,0,0,0,7.436,15.2935,3.0777,3.0777,0,0,1,9,17.9229V20h2V17.9229a5.0608,5.0608,0,0,0-2.5371-4.3458A3.0016,3.0016,0,0,1,9.28,8.0825Z\"></path></svg>";
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: 24,
            height: 24,
            viewBox: "0 0 32 32",
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            Hearing24Directive.titleIdCounter++;
            title.setAttribute("id", "hearing24-" + Hearing24Directive.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "hearing24-" + Hearing24Directive.titleIdCounter);
        }
    };
    Hearing24Directive.titleIdCounter = 0;
    Hearing24Directive.decorators = [
        { type: Directive, args: [{
                    selector: "[ibmIconHearing24]"
                },] },
    ];
    /** @nocollapse */
    Hearing24Directive.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    Hearing24Directive.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        isFocusable: [{ type: Input }]
    };
    return Hearing24Directive;
}());
export { Hearing24Directive };
var Hearing24Module = /** @class */ (function () {
    function Hearing24Module() {
    }
    Hearing24Module.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        Hearing24,
                        Hearing24Directive
                    ],
                    exports: [
                        Hearing24,
                        Hearing24Directive
                    ]
                },] },
    ];
    return Hearing24Module;
}());
export { Hearing24Module };
//# sourceMappingURL=24.js.map