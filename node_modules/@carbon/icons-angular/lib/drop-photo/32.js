import { NgModule, Component, Directive, ElementRef, Input } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var DropPhoto32 = /** @class */ (function () {
    function DropPhoto32() {
        this.focusable = false;
    }
    DropPhoto32.decorators = [
        { type: Component, args: [{
                    selector: "ibm-icon-drop-photo32",
                    template: "\n    <svg\n      ibmIconDropPhoto32\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
                },] },
    ];
    DropPhoto32.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        focusable: [{ type: Input }],
        innerClass: [{ type: Input }]
    };
    return DropPhoto32;
}());
export { DropPhoto32 };
var DropPhoto32Directive = /** @class */ (function () {
    function DropPhoto32Directive(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
    }
    DropPhoto32Directive.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var domParser = new DOMParser();
        var rawSVG = "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M19,26a4,4,0,1,1,4-4A4.0045,4.0045,0,0,1,19,26Zm0-6a2,2,0,1,0,2,2A2.0021,2.0021,0,0,0,19,20Z\"></path><path d=\"M27 29H11a2 2 0 0 1-2-2V18a2 2 0 0 1 2-2h3.2793l.5441-1.6324A2 2 0 0 1 16.7208 13h4.5584a2 2 0 0 1 1.8974 1.3676L23.7207 16H27a2 2 0 0 1 2 2v9A2 2 0 0 1 27 29zM11 27H27V18H22.2792l-1-3H16.7207l-1 3H11zM27 11H29V13H27zM27 7H29V9H27zM27 3H29V5H27zM23 3H25V5H23zM19 3H21V5H19zM15 3H17V5H15zM11 3H13V5H11zM7 3H9V5H7zM3 3H5V5H3zM3 7H5V9H3zM3 11H5V13H3zM3 15H5V17H3zM3 19H5V21H3zM3 23H5V25H3zM3 27H5V29H3z\"></path></svg>";
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: 32,
            height: 32,
            viewBox: "0 0 32 32",
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            DropPhoto32Directive.titleIdCounter++;
            title.setAttribute("id", "drop-photo32-" + DropPhoto32Directive.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "drop-photo32-" + DropPhoto32Directive.titleIdCounter);
        }
    };
    DropPhoto32Directive.titleIdCounter = 0;
    DropPhoto32Directive.decorators = [
        { type: Directive, args: [{
                    selector: "[ibmIconDropPhoto32]"
                },] },
    ];
    /** @nocollapse */
    DropPhoto32Directive.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    DropPhoto32Directive.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        isFocusable: [{ type: Input }]
    };
    return DropPhoto32Directive;
}());
export { DropPhoto32Directive };
var DropPhoto32Module = /** @class */ (function () {
    function DropPhoto32Module() {
    }
    DropPhoto32Module.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        DropPhoto32,
                        DropPhoto32Directive
                    ],
                    exports: [
                        DropPhoto32,
                        DropPhoto32Directive
                    ]
                },] },
    ];
    return DropPhoto32Module;
}());
export { DropPhoto32Module };
//# sourceMappingURL=32.js.map