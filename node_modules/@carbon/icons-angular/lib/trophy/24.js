import { NgModule, Component, Directive, ElementRef, Input } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var Trophy24 = /** @class */ (function () {
    function Trophy24() {
        this.focusable = false;
    }
    Trophy24.decorators = [
        { type: Component, args: [{
                    selector: "ibm-icon-trophy24",
                    template: "\n    <svg\n      ibmIconTrophy24\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
                },] },
    ];
    Trophy24.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        focusable: [{ type: Input }],
        innerClass: [{ type: Input }]
    };
    return Trophy24;
}());
export { Trophy24 };
var Trophy24Directive = /** @class */ (function () {
    function Trophy24Directive(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
    }
    Trophy24Directive.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var domParser = new DOMParser();
        var rawSVG = "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M26,7H24V6a2.0023,2.0023,0,0,0-2-2H10A2.0023,2.0023,0,0,0,8,6V7H6A2.0023,2.0023,0,0,0,4,9v3a4.0045,4.0045,0,0,0,4,4h.322A8.1689,8.1689,0,0,0,15,21.9341V26H10v2H22V26H17V21.9311A7.9661,7.9661,0,0,0,23.74,16H24a4.0045,4.0045,0,0,0,4-4V9A2.0023,2.0023,0,0,0,26,7ZM8,14a2.0023,2.0023,0,0,1-2-2V9H8Zm14,0a6,6,0,0,1-6.1855,5.9971A6.1991,6.1991,0,0,1,10,13.7065V6H22Zm4-2a2.0023,2.0023,0,0,1-2,2V9h2Z\"></path></svg>";
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: 24,
            height: 24,
            viewBox: "0 0 32 32",
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            Trophy24Directive.titleIdCounter++;
            title.setAttribute("id", "trophy24-" + Trophy24Directive.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "trophy24-" + Trophy24Directive.titleIdCounter);
        }
    };
    Trophy24Directive.titleIdCounter = 0;
    Trophy24Directive.decorators = [
        { type: Directive, args: [{
                    selector: "[ibmIconTrophy24]"
                },] },
    ];
    /** @nocollapse */
    Trophy24Directive.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    Trophy24Directive.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        isFocusable: [{ type: Input }]
    };
    return Trophy24Directive;
}());
export { Trophy24Directive };
var Trophy24Module = /** @class */ (function () {
    function Trophy24Module() {
    }
    Trophy24Module.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        Trophy24,
                        Trophy24Directive
                    ],
                    exports: [
                        Trophy24,
                        Trophy24Directive
                    ]
                },] },
    ];
    return Trophy24Module;
}());
export { Trophy24Module };
//# sourceMappingURL=24.js.map