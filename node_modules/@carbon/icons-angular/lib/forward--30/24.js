import { NgModule, Component, Directive, ElementRef, Input } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var Forward_3024 = /** @class */ (function () {
    function Forward_3024() {
        this.focusable = false;
    }
    Forward_3024.decorators = [
        { type: Component, args: [{
                    selector: "ibm-icon-forward-3024",
                    template: "\n    <svg\n      ibmIconForward_3024\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
                },] },
    ];
    Forward_3024.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        focusable: [{ type: Input }],
        innerClass: [{ type: Input }]
    };
    return Forward_3024;
}());
export { Forward_3024 };
var Forward_3024Directive = /** @class */ (function () {
    function Forward_3024Directive(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
    }
    Forward_3024Directive.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var domParser = new DOMParser();
        var rawSVG = "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M26,18A10,10,0,1,1,16,8h4v5l6-6L20,1V6H16A12,12,0,1,0,28,18Z\"></path><path d=\"M19.64 22.13a2.81 2.81 0 0 1-1.28-.27 2.36 2.36 0 0 1-.89-.77A3.39 3.39 0 0 1 17 19.84a7.12 7.12 0 0 1-.17-1.68A7.24 7.24 0 0 1 17 16.48a3.46 3.46 0 0 1 .52-1.25 2.36 2.36 0 0 1 .89-.77 2.81 2.81 0 0 1 1.28-.27 2.44 2.44 0 0 1 2.16 1 5.31 5.31 0 0 1 .7 2.93 5.31 5.31 0 0 1-.7 2.93A2.44 2.44 0 0 1 19.64 22.13zm0-1.22a1 1 0 0 0 1-.55 3.24 3.24 0 0 0 .3-1.51V17.47a3.17 3.17 0 0 0-.3-1.5 1.22 1.22 0 0 0-2.05 0 3.18 3.18 0 0 0-.29 1.5v1.38a3.25 3.25 0 0 0 .29 1.51A1 1 0 0 0 19.64 20.91zM12.62 17.42a1.46 1.46 0 0 0 1-.27.84.84 0 0 0 .31-.68v-.08a.94.94 0 0 0-.3-.74 1.2 1.2 0 0 0-.83-.27 1.65 1.65 0 0 0-.89.24 2.1 2.1 0 0 0-.68.68l-.93-.83a5.37 5.37 0 0 1 .44-.51 2.7 2.7 0 0 1 .54-.4 2.55 2.55 0 0 1 .7-.27 3.25 3.25 0 0 1 .87-.1 3.94 3.94 0 0 1 1.06.14 2.33 2.33 0 0 1 .82.4 1.91 1.91 0 0 1 .54.63 1.87 1.87 0 0 1 .18.83 2 2 0 0 1-.11.67 1.82 1.82 0 0 1-.32.52 1.79 1.79 0 0 1-.47.36 2.27 2.27 0 0 1-.57.2V18a2.34 2.34 0 0 1 .63.21 1.7 1.7 0 0 1 .51.38 1.89 1.89 0 0 1 .34.55 2.07 2.07 0 0 1 .12.73 2 2 0 0 1-.2.92 2 2 0 0 1-.58.72 2.66 2.66 0 0 1-.89.45 3.76 3.76 0 0 1-1.15.16 4.1 4.1 0 0 1-1-.11A3.1 3.1 0 0 1 11 21.7a2.76 2.76 0 0 1-.56-.45A4.22 4.22 0 0 1 10 20.7l1.07-.81a3.07 3.07 0 0 0 .28.42 1.94 1.94 0 0 0 .36.34 1.57 1.57 0 0 0 .45.22 2 2 0 0 0 .57.07 1.45 1.45 0 0 0 1-.3 1.12 1.12 0 0 0 .34-.85v-.08a1 1 0 0 0-.37-.8 1.78 1.78 0 0 0-1.06-.28h-.76V17.42z\"></path></svg>";
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: 24,
            height: 24,
            viewBox: "0 0 32 32",
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            Forward_3024Directive.titleIdCounter++;
            title.setAttribute("id", "forward-3024-" + Forward_3024Directive.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "forward-3024-" + Forward_3024Directive.titleIdCounter);
        }
    };
    Forward_3024Directive.titleIdCounter = 0;
    Forward_3024Directive.decorators = [
        { type: Directive, args: [{
                    selector: "[ibmIconForward_3024]"
                },] },
    ];
    /** @nocollapse */
    Forward_3024Directive.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    Forward_3024Directive.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        isFocusable: [{ type: Input }]
    };
    return Forward_3024Directive;
}());
export { Forward_3024Directive };
var Forward_3024Module = /** @class */ (function () {
    function Forward_3024Module() {
    }
    Forward_3024Module.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        Forward_3024,
                        Forward_3024Directive
                    ],
                    exports: [
                        Forward_3024,
                        Forward_3024Directive
                    ]
                },] },
    ];
    return Forward_3024Module;
}());
export { Forward_3024Module };
//# sourceMappingURL=24.js.map