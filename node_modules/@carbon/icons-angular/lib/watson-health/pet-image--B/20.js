import { NgModule, Component, Directive, ElementRef, Input } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var WatsonHealthPetImageB20 = /** @class */ (function () {
    function WatsonHealthPetImageB20() {
        this.focusable = false;
    }
    WatsonHealthPetImageB20.decorators = [
        { type: Component, args: [{
                    selector: "ibm-icon-watson-health-pet-image-b20",
                    template: "\n    <svg\n      ibmIconWatsonHealthPetImageB20\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
                },] },
    ];
    WatsonHealthPetImageB20.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        focusable: [{ type: Input }],
        innerClass: [{ type: Input }]
    };
    return WatsonHealthPetImageB20;
}());
export { WatsonHealthPetImageB20 };
var WatsonHealthPetImageB20Directive = /** @class */ (function () {
    function WatsonHealthPetImageB20Directive(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
    }
    WatsonHealthPetImageB20Directive.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var domParser = new DOMParser();
        var rawSVG = "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M19 21H21V24H19zM19 0H21V3H19zM8 11H11V13H8zM29 11H32V13H29z\"></path><path d=\"M11.59 3.07H13.57V6.07H11.59z\" transform=\"rotate(-45 12.586 4.577)\"></path><path d=\"M26.44 17.92H28.42V20.92H26.44z\" transform=\"rotate(-45 27.43 19.408)\"></path><path d=\"M11.09 18.42H14.09V20.400000000000002H11.09z\" transform=\"rotate(-45 12.592 19.414)\"></path><path d=\"M25.93 3.58H28.93V5.5600000000000005H25.93z\" transform=\"rotate(-45 27.423 4.57)\"></path><path d=\"M20 5a7 7 0 1 0 7 7A7 7 0 0 0 20 5zm0 12A5 5 0 0 1 20 7zM5 18H0V32H5a3 3 0 0 0 3-3V27a3 3 0 0 0-.78-2A3 3 0 0 0 8 23V21A3 3 0 0 0 5 18zM2 20H5a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H2zm4 9a1 1 0 0 1-1 1H2V26H5a1 1 0 0 1 1 1zM2 2L9 2 9 0 0 0 0 9 2 9 2 2z\"></path></svg>";
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: 20,
            height: 20,
            viewBox: "0 0 32 32",
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            WatsonHealthPetImageB20Directive.titleIdCounter++;
            title.setAttribute("id", "watson-health-pet-image-b20-" + WatsonHealthPetImageB20Directive.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "watson-health-pet-image-b20-" + WatsonHealthPetImageB20Directive.titleIdCounter);
        }
    };
    WatsonHealthPetImageB20Directive.titleIdCounter = 0;
    WatsonHealthPetImageB20Directive.decorators = [
        { type: Directive, args: [{
                    selector: "[ibmIconWatsonHealthPetImageB20]"
                },] },
    ];
    /** @nocollapse */
    WatsonHealthPetImageB20Directive.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    WatsonHealthPetImageB20Directive.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        isFocusable: [{ type: Input }]
    };
    return WatsonHealthPetImageB20Directive;
}());
export { WatsonHealthPetImageB20Directive };
var WatsonHealthPetImageB20Module = /** @class */ (function () {
    function WatsonHealthPetImageB20Module() {
    }
    WatsonHealthPetImageB20Module.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        WatsonHealthPetImageB20,
                        WatsonHealthPetImageB20Directive
                    ],
                    exports: [
                        WatsonHealthPetImageB20,
                        WatsonHealthPetImageB20Directive
                    ]
                },] },
    ];
    return WatsonHealthPetImageB20Module;
}());
export { WatsonHealthPetImageB20Module };
//# sourceMappingURL=20.js.map