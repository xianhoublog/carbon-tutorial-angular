import { NgModule, Component, Directive, ElementRef, Input } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var AttachmentComponent = /** @class */ (function () {
    function AttachmentComponent() {
        this.focusable = false;
    }
    AttachmentComponent.decorators = [
        { type: Component, args: [{
                    selector: "ibm-icon-attachment",
                    template: "\n    <svg\n      ibmIconAttachment\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
                },] },
    ];
    AttachmentComponent.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        focusable: [{ type: Input }],
        innerClass: [{ type: Input }],
        size: [{ type: Input }]
    };
    return AttachmentComponent;
}());
export { AttachmentComponent };
var AttachmentDirective = /** @class */ (function () {
    function AttachmentDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "16": {
                metadata: { "filename": "attachment.svg", "basename": "attachment", "size": 16, "prefix": ["16"], "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 16 16", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M14.1,9L7,1.9C5.6,0.6,3.3,0.7,2,2.1S0.7,5.6,1.9,7l1.6,1.6l0.8-0.8L2.7,6.2c-1-0.9-1-2.5-0.1-3.5s2.5-1,3.5-0.1l0.1,0.1\tl7.1,7.1c1,0.9,1,2.5,0.1,3.5s-2.5,1-3.5,0.1l-0.1-0.1L6.5,9.9C5.9,9.4,5.9,8.5,6.5,8s1.4-0.5,1.9,0l0,0l1.7,1.7L10.9,9L9.1,7.2\tc-1-0.9-2.5-0.9-3.5,0.1c-0.9,0.9-0.9,2.4,0,3.3L9,14.1c1.4,1.3,3.7,1.2,5-0.2S15.3,10.4,14.1,9z" } }], "name": "attachment", "size": 16 }, "moduleName": "Attachment16", "outputOptions": { "file": "ts/attachment/16.ts" }, "namespace": "attachment" },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" aria-hidden=\"true\"><path d=\"M14.1,9L7,1.9C5.6,0.6,3.3,0.7,2,2.1S0.7,5.6,1.9,7l1.6,1.6l0.8-0.8L2.7,6.2c-1-0.9-1-2.5-0.1-3.5s2.5-1,3.5-0.1l0.1,0.1\tl7.1,7.1c1,0.9,1,2.5,0.1,3.5s-2.5,1-3.5,0.1l-0.1-0.1L6.5,9.9C5.9,9.4,5.9,8.5,6.5,8s1.4-0.5,1.9,0l0,0l1.7,1.7L10.9,9L9.1,7.2\tc-1-0.9-2.5-0.9-3.5,0.1c-0.9,0.9-0.9,2.4,0,3.3L9,14.1c1.4,1.3,3.7,1.2,5-0.2S15.3,10.4,14.1,9z\"></path></svg>"
            },
            "32": {
                metadata: { "filename": "attachment.svg", "basename": "attachment", "size": 32, "prefix": ["32"], "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M27.1,17.9l-13-13a6.51,6.51,0,0,0-9.2,9.2l3,3,1.41-1.41-3-3a4.5,4.5,0,1,1,6.36-6.36l13,13a4.5,4.5,0,1,1-6.36,6.36l-6.13-6.13A2.5,2.5,0,0,1,16.72,16l3.17,3.17,1.41-1.41s-3.22-3.23-3.25-3.24a4.49,4.49,0,0,0-6.34,6.35L17.9,27.1a6.51,6.51,0,0,0,9.2-9.2Z" } }], "name": "attachment", "size": 32 }, "moduleName": "Attachment32", "outputOptions": { "file": "ts/attachment/32.ts" }, "namespace": "attachment" },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M27.1,17.9l-13-13a6.51,6.51,0,0,0-9.2,9.2l3,3,1.41-1.41-3-3a4.5,4.5,0,1,1,6.36-6.36l13,13a4.5,4.5,0,1,1-6.36,6.36l-6.13-6.13A2.5,2.5,0,0,1,16.72,16l3.17,3.17,1.41-1.41s-3.22-3.23-3.25-3.24a4.49,4.49,0,0,0-6.34,6.35L17.9,27.1a6.51,6.51,0,0,0,9.2-9.2Z\"></path></svg>"
            },
            "24": {
                metadata: { "filename": "attachment.svg", "basename": "attachment", "size": 24, "prefix": ["32"], "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M27.1,17.9l-13-13a6.51,6.51,0,0,0-9.2,9.2l3,3,1.41-1.41-3-3a4.5,4.5,0,1,1,6.36-6.36l13,13a4.5,4.5,0,1,1-6.36,6.36l-6.13-6.13A2.5,2.5,0,0,1,16.72,16l3.17,3.17,1.41-1.41s-3.22-3.23-3.25-3.24a4.49,4.49,0,0,0-6.34,6.35L17.9,27.1a6.51,6.51,0,0,0,9.2-9.2Z" } }], "name": "attachment", "size": 24 }, "moduleName": "Attachment24", "original": 32, "outputOptions": { "file": "ts/attachment/24.ts" }, "namespace": "attachment" },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M27.1,17.9l-13-13a6.51,6.51,0,0,0-9.2,9.2l3,3,1.41-1.41-3-3a4.5,4.5,0,1,1,6.36-6.36l13,13a4.5,4.5,0,1,1-6.36,6.36l-6.13-6.13A2.5,2.5,0,0,1,16.72,16l3.17,3.17,1.41-1.41s-3.22-3.23-3.25-3.24a4.49,4.49,0,0,0-6.34,6.35L17.9,27.1a6.51,6.51,0,0,0,9.2-9.2Z\"></path></svg>"
            },
            "20": {
                metadata: { "filename": "attachment.svg", "basename": "attachment", "size": 20, "prefix": ["32"], "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M27.1,17.9l-13-13a6.51,6.51,0,0,0-9.2,9.2l3,3,1.41-1.41-3-3a4.5,4.5,0,1,1,6.36-6.36l13,13a4.5,4.5,0,1,1-6.36,6.36l-6.13-6.13A2.5,2.5,0,0,1,16.72,16l3.17,3.17,1.41-1.41s-3.22-3.23-3.25-3.24a4.49,4.49,0,0,0-6.34,6.35L17.9,27.1a6.51,6.51,0,0,0,9.2-9.2Z" } }], "name": "attachment", "size": 20 }, "moduleName": "Attachment20", "original": 32, "outputOptions": { "file": "ts/attachment/20.ts" }, "namespace": "attachment" },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M27.1,17.9l-13-13a6.51,6.51,0,0,0-9.2,9.2l3,3,1.41-1.41-3-3a4.5,4.5,0,1,1,6.36-6.36l13,13a4.5,4.5,0,1,1-6.36,6.36l-6.13-6.13A2.5,2.5,0,0,1,16.72,16l3.17,3.17,1.41-1.41s-3.22-3.23-3.25-3.24a4.49,4.49,0,0,0-6.34,6.35L17.9,27.1a6.51,6.51,0,0,0,9.2-9.2Z\"></path></svg>"
            },
        };
    }
    AttachmentDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            AttachmentDirective.titleIdCounter++;
            title.setAttribute("id", "attachment-" + AttachmentDirective.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "attachment-" + AttachmentDirective.titleIdCounter);
        }
    };
    AttachmentDirective.titleIdCounter = 0;
    AttachmentDirective.decorators = [
        { type: Directive, args: [{
                    selector: "[ibmIconAttachment]"
                },] },
    ];
    /** @nocollapse */
    AttachmentDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    AttachmentDirective.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        isFocusable: [{ type: Input }],
        size: [{ type: Input }]
    };
    return AttachmentDirective;
}());
export { AttachmentDirective };
var AttachmentModule = /** @class */ (function () {
    function AttachmentModule() {
    }
    AttachmentModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        AttachmentComponent,
                        AttachmentDirective,
                    ],
                    exports: [
                        AttachmentComponent,
                        AttachmentDirective,
                    ]
                },] },
    ];
    return AttachmentModule;
}());
export { AttachmentModule };
//# sourceMappingURL=index.js.map