import { NgModule, Component, Directive, ElementRef, Input } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var TextStrikethrough16 = /** @class */ (function () {
    function TextStrikethrough16() {
        this.focusable = false;
    }
    TextStrikethrough16.decorators = [
        { type: Component, args: [{
                    selector: "ibm-icon-text-strikethrough16",
                    template: "\n    <svg\n      ibmIconTextStrikethrough16\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
                },] },
    ];
    TextStrikethrough16.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        focusable: [{ type: Input }],
        innerClass: [{ type: Input }]
    };
    return TextStrikethrough16;
}());
export { TextStrikethrough16 };
var TextStrikethrough16Directive = /** @class */ (function () {
    function TextStrikethrough16Directive(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
    }
    TextStrikethrough16Directive.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var domParser = new DOMParser();
        var rawSVG = "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M28,15H17.9563c-.4522-.1237-.9037-.2324-1.3381-.3352-2.8077-.6641-4.396-1.1506-4.396-3.4231a2.8684,2.8684,0,0,1,.7866-2.145,4.7888,4.7888,0,0,1,3.0137-1.09c2.8291-.07,4.1347.8894,5.2011,2.35l1.6153-1.1792a7.4727,7.4727,0,0,0-6.83-3.1706,6.7726,6.7726,0,0,0-4.4,1.6611,4.8274,4.8274,0,0,0-1.3862,3.5735A4.3723,4.3723,0,0,0,11.9573,15H4v2H17.6519c1.9668.57,3.1432,1.3123,3.1733,3.3579a3.119,3.119,0,0,1-.8623,2.3931A5.8241,5.8241,0,0,1,16.2432,24a6.6344,6.6344,0,0,1-5.1451-2.6912L9.5649,22.593A8.5262,8.5262,0,0,0,16.2119,26c.0088-.0012.042,0,.1,0A7.67,7.67,0,0,0,21.36,24.1812a5.0779,5.0779,0,0,0,1.4648-3.8531A4.952,4.952,0,0,0,21.6753,17H28Z\"></path></svg>";
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: 16,
            height: 16,
            viewBox: "0 0 32 32",
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            TextStrikethrough16Directive.titleIdCounter++;
            title.setAttribute("id", "text-strikethrough16-" + TextStrikethrough16Directive.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "text-strikethrough16-" + TextStrikethrough16Directive.titleIdCounter);
        }
    };
    TextStrikethrough16Directive.titleIdCounter = 0;
    TextStrikethrough16Directive.decorators = [
        { type: Directive, args: [{
                    selector: "[ibmIconTextStrikethrough16]"
                },] },
    ];
    /** @nocollapse */
    TextStrikethrough16Directive.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    TextStrikethrough16Directive.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        isFocusable: [{ type: Input }]
    };
    return TextStrikethrough16Directive;
}());
export { TextStrikethrough16Directive };
var TextStrikethrough16Module = /** @class */ (function () {
    function TextStrikethrough16Module() {
    }
    TextStrikethrough16Module.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        TextStrikethrough16,
                        TextStrikethrough16Directive
                    ],
                    exports: [
                        TextStrikethrough16,
                        TextStrikethrough16Directive
                    ]
                },] },
    ];
    return TextStrikethrough16Module;
}());
export { TextStrikethrough16Module };
//# sourceMappingURL=16.js.map