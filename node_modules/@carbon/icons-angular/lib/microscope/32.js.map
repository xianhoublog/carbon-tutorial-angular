{"version":3,"file":"32.js","sourceRoot":"","sources":["../../../ts/microscope/32.ts"],"names":[],"mappings":"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","sourcesContent":["\nimport {\n  NgModule,\n  Component,\n  Directive,\n  ElementRef,\n  Input,\n  AfterViewInit\n} from \"@angular/core\";\nimport { getAttributes } from \"@carbon/icon-helpers\";\n\n@Component({\n\tselector: \"ibm-icon-microscope32\",\n  template: `\n    <svg\n      ibmIconMicroscope32\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  `\n})\nexport class Microscope32 {\n  @Input() ariaLabel: string;\n  @Input() ariaLabelledby: string;\n  @Input() ariaHidden: boolean;\n  @Input() title: string;\n  @Input() focusable: boolean = false;\n  @Input() innerClass: string;\n}\n\n@Directive({\n  selector: \"[ibmIconMicroscope32]\"\n})\nexport class Microscope32Directive implements AfterViewInit {\n  static titleIdCounter = 0;\n\n  @Input() ariaLabel: string;\n  @Input() ariaLabelledby: string;\n  @Input() ariaHidden: boolean;\n  @Input() title: string;\n  @Input() isFocusable: boolean = false;\n\n  constructor(protected elementRef: ElementRef) {}\n\n\tngAfterViewInit() {\n    const svg = this.elementRef.nativeElement;\n    svg.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n\n    const domParser = new DOMParser();\n    const rawSVG = `<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M25.3943,24a7.8772,7.8772,0,0,0-1.6707-8.5684,3.918,3.918,0,0,0-1.0844-4.414l2.7759-2.7759a2.0025,2.0025,0,0,0,0-2.8286L22.5869,2.5849a2.0021,2.0021,0,0,0-2.8286,0L6.5859,15.7573a2.0027,2.0027,0,0,0,0,2.8286l2.8282,2.8282a2.0024,2.0024,0,0,0,2.8286,0l4.7749-4.7754a3.9329,3.9329,0,0,0,5.5139.4326A5.9442,5.9442,0,0,1,23.1775,24H16v4H4v2H28V24ZM10.8281,20,8,17.1714,9.8787,15.293l2.8283,2.8281ZM16,14a3.9811,3.9811,0,0,0,.0762.7524L14.1211,16.707l-2.8284-2.8281,9.88-9.88L24.001,6.8271l-3.2488,3.2491A3.9771,3.9771,0,0,0,16,14Zm4,2a2,2,0,1,1,2-2A2.0023,2.0023,0,0,1,20,16Zm6,12H18V26h8Z\"></path></svg>`;\n    const svgElement = domParser.parseFromString(rawSVG, \"image/svg+xml\").documentElement;\n\n    let node = svgElement.firstChild;\n    while (node) {\n      // importNode makes a clone of the node\n      // this ensures we keep looping over the nodes in the parsed document\n      svg.appendChild(svg.ownerDocument.importNode(node, true));\n      node = node.nextSibling;\n    }\n\n    const attributes = getAttributes({\n      width: 32,\n      height: 32,\n      viewBox: \"0 0 32 32\",\n      title: this.title,\n      \"aria-label\": this.ariaLabel,\n      \"aria-labelledby\": this.ariaLabelledby,\n      \"aria-hidden\": this.ariaHidden,\n      focusable: this.isFocusable.toString()\n    });\n\n    const attrKeys = Object.keys(attributes);\n    for (let i = 0; i < attrKeys.length; i++) {\n      const key = attrKeys[i];\n      const value = attributes[key];\n      if (key === \"title\") {\n        continue;\n      }\n      if (value) {\n        svg.setAttribute(key, value);\n      }\n    }\n\n    if (attributes.title) {\n      const title = document.createElement(\"title\");\n      title.textContent = attributes.title;\n      Microscope32Directive.titleIdCounter++;\n      title.setAttribute(\"id\", `microscope32-${Microscope32Directive.titleIdCounter}`);\n      svg.appendChild(title);\n      svg.setAttribute(\"aria-labelledby\", `microscope32-${Microscope32Directive.titleIdCounter}`);\n    }\n\t}\n}\n\n@NgModule({\n  declarations: [\n    Microscope32,\n    Microscope32Directive\n  ],\n  exports: [\n    Microscope32,\n    Microscope32Directive\n  ]\n})\nexport class Microscope32Module {}\n"]}