{"version":3,"file":"32.js","sourceRoot":"","sources":["../../../ts/watson/32.ts"],"names":[],"mappings":"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","sourcesContent":["\nimport {\n  NgModule,\n  Component,\n  Directive,\n  ElementRef,\n  Input,\n  AfterViewInit\n} from \"@angular/core\";\nimport { getAttributes } from \"@carbon/icon-helpers\";\n\n@Component({\n\tselector: \"ibm-icon-watson32\",\n  template: `\n    <svg\n      ibmIconWatson32\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  `\n})\nexport class Watson32 {\n  @Input() ariaLabel: string;\n  @Input() ariaLabelledby: string;\n  @Input() ariaHidden: boolean;\n  @Input() title: string;\n  @Input() focusable: boolean = false;\n  @Input() innerClass: string;\n}\n\n@Directive({\n  selector: \"[ibmIconWatson32]\"\n})\nexport class Watson32Directive implements AfterViewInit {\n  static titleIdCounter = 0;\n\n  @Input() ariaLabel: string;\n  @Input() ariaLabelledby: string;\n  @Input() ariaHidden: boolean;\n  @Input() title: string;\n  @Input() isFocusable: boolean = false;\n\n  constructor(protected elementRef: ElementRef) {}\n\n\tngAfterViewInit() {\n    const svg = this.elementRef.nativeElement;\n    svg.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n\n    const domParser = new DOMParser();\n    const rawSVG = `<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M21.74 9.49h0A11.41 11.41 0 0 0 16 8h0a.76.76 0 1 0 0 1.51 10.15 10.15 0 0 1 1.91.21c-2.26 1.08-4.76 3.58-6.73 7a22.48 22.48 0 0 0-2 4.44A9.58 9.58 0 0 1 7 17.22a3.43 3.43 0 0 1 .28-2.66v0h0c.79-1.37 2.44-2.15 4.63-2.2a.76.76 0 0 0 .74-.78.75.75 0 0 0-.78-.74C9.19 10.88 7.1 11.92 6 13.74H6v0s0 0 0 0a4.84 4.84 0 0 0-.44 3.79 12 12 0 0 0 3.2 5.22A11.36 11.36 0 0 0 8.52 26a10 10 0 0 1-2-3.48A.75.75 0 0 0 5.57 22a.76.76 0 0 0-.49 1 11.45 11.45 0 0 0 5.18 6.38h0A11.42 11.42 0 0 0 16 30.92a11.74 11.74 0 0 0 3-.39 11.48 11.48 0 0 0 2.77-21zM18.58 29.06a9.9 9.9 0 0 1-7.56-1h0c-.86-.49-1.21-2-.94-4a18.85 18.85 0 0 0 2.48 1.72 13.92 13.92 0 0 0 6.93 2 11 11 0 0 0 2.42-.28A9.78 9.78 0 0 1 18.58 29.06zm6.06-4.66c-2 2-6.66 2.74-11.32.05a17.36 17.36 0 0 1-2.89-2.12 21.08 21.08 0 0 1 2.08-4.91c2.94-5.08 6.83-7.57 8.47-6.62h0A10 10 0 0 1 24.64 24.4zM4.16 11.72L1.14 10a.76.76 0 1 0-.76 1.31L3.4 13a.86.86 0 0 0 .38.1.77.77 0 0 0 .66-.38A.76.76 0 0 0 4.16 11.72zM8.29 7.59A.74.74 0 0 0 8.94 8a.75.75 0 0 0 .38-.1.76.76 0 0 0 .28-1l-1.74-3a.76.76 0 0 0-1-.27.75.75 0 0 0-.28 1zM16 6.08a.76.76 0 0 0 .76-.76V1.83a.76.76 0 0 0-1.52 0V5.32A.76.76 0 0 0 16 6.08zM22.68 7.87a.75.75 0 0 0 1-.28l1.75-3a.75.75 0 0 0-.28-1 .76.76 0 0 0-1 .27l-1.74 3A.76.76 0 0 0 22.68 7.87zM31.9 10.25a.76.76 0 0 0-1-.27l-3 1.74a.76.76 0 0 0-.28 1 .77.77 0 0 0 .66.38.86.86 0 0 0 .38-.1l3-1.75A.76.76 0 0 0 31.9 10.25z\"></path></svg>`;\n    const svgElement = domParser.parseFromString(rawSVG, \"image/svg+xml\").documentElement;\n\n    let node = svgElement.firstChild;\n    while (node) {\n      // importNode makes a clone of the node\n      // this ensures we keep looping over the nodes in the parsed document\n      svg.appendChild(svg.ownerDocument.importNode(node, true));\n      node = node.nextSibling;\n    }\n\n    const attributes = getAttributes({\n      width: 32,\n      height: 32,\n      viewBox: \"0 0 32 32\",\n      title: this.title,\n      \"aria-label\": this.ariaLabel,\n      \"aria-labelledby\": this.ariaLabelledby,\n      \"aria-hidden\": this.ariaHidden,\n      focusable: this.isFocusable.toString()\n    });\n\n    const attrKeys = Object.keys(attributes);\n    for (let i = 0; i < attrKeys.length; i++) {\n      const key = attrKeys[i];\n      const value = attributes[key];\n      if (key === \"title\") {\n        continue;\n      }\n      if (value) {\n        svg.setAttribute(key, value);\n      }\n    }\n\n    if (attributes.title) {\n      const title = document.createElement(\"title\");\n      title.textContent = attributes.title;\n      Watson32Directive.titleIdCounter++;\n      title.setAttribute(\"id\", `watson32-${Watson32Directive.titleIdCounter}`);\n      svg.appendChild(title);\n      svg.setAttribute(\"aria-labelledby\", `watson32-${Watson32Directive.titleIdCounter}`);\n    }\n\t}\n}\n\n@NgModule({\n  declarations: [\n    Watson32,\n    Watson32Directive\n  ],\n  exports: [\n    Watson32,\n    Watson32Directive\n  ]\n})\nexport class Watson32Module {}\n"]}