import { NgModule, Component, Directive, ElementRef, Input } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var EventsAlt20 = /** @class */ (function () {
    function EventsAlt20() {
        this.focusable = false;
    }
    EventsAlt20.decorators = [
        { type: Component, args: [{
                    selector: "ibm-icon-events-alt20",
                    template: "\n    <svg\n      ibmIconEventsAlt20\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
                },] },
    ];
    EventsAlt20.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        focusable: [{ type: Input }],
        innerClass: [{ type: Input }]
    };
    return EventsAlt20;
}());
export { EventsAlt20 };
var EventsAlt20Directive = /** @class */ (function () {
    function EventsAlt20Directive(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
    }
    EventsAlt20Directive.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var domParser = new DOMParser();
        var rawSVG = "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M18 31h2V29a1.0006 1.0006 0 0 1 1-1h6a1.0006 1.0006 0 0 1 1 1v2h2V29a3.0033 3.0033 0 0 0-3-3H21a3.0033 3.0033 0 0 0-3 3zM24 25a4 4 0 1 1 4-4A4.0039 4.0039 0 0 1 24 25zm0-6a2 2 0 1 0 2 2A2.0027 2.0027 0 0 0 24 19zM2 31H4V29a1.0009 1.0009 0 0 1 1-1h6a1.0009 1.0009 0 0 1 1 1v2h2V29a3.0033 3.0033 0 0 0-3-3H5a3.0033 3.0033 0 0 0-3 3zM8 25a4 4 0 1 1 4-4A4.0042 4.0042 0 0 1 8 25zm0-6a2 2 0 1 0 2 2A2.0023 2.0023 0 0 0 8 19zM18 16h2V14a1.0009 1.0009 0 0 1 1-1h6a1.0009 1.0009 0 0 1 1 1v2h2V14a3.0033 3.0033 0 0 0-3-3H21a3.0033 3.0033 0 0 0-3 3zM24 10a4 4 0 1 1 4-4A4.0042 4.0042 0 0 1 24 10zm0-6a2 2 0 1 0 2 2A2.0023 2.0023 0 0 0 24 4zM2 16H4V14a1.0013 1.0013 0 0 1 1-1h6a1.0013 1.0013 0 0 1 1 1v2h2V14a3.0033 3.0033 0 0 0-3-3H5a3.0033 3.0033 0 0 0-3 3zM8 10a4 4 0 1 1 4-4A4.0045 4.0045 0 0 1 8 10zM8 4a2 2 0 1 0 2 2A2.002 2.002 0 0 0 8 4z\"></path></svg>";
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: 20,
            height: 20,
            viewBox: "0 0 32 32",
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            EventsAlt20Directive.titleIdCounter++;
            title.setAttribute("id", "events-alt20-" + EventsAlt20Directive.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "events-alt20-" + EventsAlt20Directive.titleIdCounter);
        }
    };
    EventsAlt20Directive.titleIdCounter = 0;
    EventsAlt20Directive.decorators = [
        { type: Directive, args: [{
                    selector: "[ibmIconEventsAlt20]"
                },] },
    ];
    /** @nocollapse */
    EventsAlt20Directive.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    EventsAlt20Directive.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        isFocusable: [{ type: Input }]
    };
    return EventsAlt20Directive;
}());
export { EventsAlt20Directive };
var EventsAlt20Module = /** @class */ (function () {
    function EventsAlt20Module() {
    }
    EventsAlt20Module.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        EventsAlt20,
                        EventsAlt20Directive
                    ],
                    exports: [
                        EventsAlt20,
                        EventsAlt20Directive
                    ]
                },] },
    ];
    return EventsAlt20Module;
}());
export { EventsAlt20Module };
//# sourceMappingURL=20.js.map