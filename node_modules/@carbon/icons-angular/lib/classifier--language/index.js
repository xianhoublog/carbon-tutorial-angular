import { NgModule, Component, Directive, ElementRef, Input } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var ClassifierLanguageComponent = /** @class */ (function () {
    function ClassifierLanguageComponent() {
        this.focusable = false;
    }
    ClassifierLanguageComponent.decorators = [
        { type: Component, args: [{
                    selector: "ibm-icon-classifier-language",
                    template: "\n    <svg\n      ibmIconClassifierLanguage\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
                },] },
    ];
    ClassifierLanguageComponent.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        focusable: [{ type: Input }],
        innerClass: [{ type: Input }],
        size: [{ type: Input }]
    };
    return ClassifierLanguageComponent;
}());
export { ClassifierLanguageComponent };
var ClassifierLanguageDirective = /** @class */ (function () {
    function ClassifierLanguageDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "filename": "classifier--language.svg", "basename": "classifier--language", "size": 32, "prefix": ["32"], "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M30 10V2H22v8h3v4H23v2h7V14H27V10zM24 4h4V8H24zM20 23.41L18.59 22 16 24.59 13.41 22 12 23.41 14.59 26 12 28.59 13.41 30 16 27.41 18.59 30 20 28.59 17.41 26 20 23.41zM20 14L12 14 12 16 15 16 15 21 17 21 17 16 20 16 20 14zM7 9.86a4 4 0 1 0-2 0V14H2v2H9V14H7zM4 6A2 2 0 1 1 6 8 2 2 0 0 1 4 6z" } }], "name": "classifier--language", "size": 32 }, "moduleName": "ClassifierLanguage32", "outputOptions": { "file": "ts/classifier--language/32.ts" }, "namespace": "classifier--language" },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M30 10V2H22v8h3v4H23v2h7V14H27V10zM24 4h4V8H24zM20 23.41L18.59 22 16 24.59 13.41 22 12 23.41 14.59 26 12 28.59 13.41 30 16 27.41 18.59 30 20 28.59 17.41 26 20 23.41zM20 14L12 14 12 16 15 16 15 21 17 21 17 16 20 16 20 14zM7 9.86a4 4 0 1 0-2 0V14H2v2H9V14H7zM4 6A2 2 0 1 1 6 8 2 2 0 0 1 4 6z\"></path></svg>"
            },
            "24": {
                metadata: { "filename": "classifier--language.svg", "basename": "classifier--language", "size": 24, "prefix": ["32"], "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M30 10V2H22v8h3v4H23v2h7V14H27V10zM24 4h4V8H24zM20 23.41L18.59 22 16 24.59 13.41 22 12 23.41 14.59 26 12 28.59 13.41 30 16 27.41 18.59 30 20 28.59 17.41 26 20 23.41zM20 14L12 14 12 16 15 16 15 21 17 21 17 16 20 16 20 14zM7 9.86a4 4 0 1 0-2 0V14H2v2H9V14H7zM4 6A2 2 0 1 1 6 8 2 2 0 0 1 4 6z" } }], "name": "classifier--language", "size": 24 }, "moduleName": "ClassifierLanguage24", "original": 32, "outputOptions": { "file": "ts/classifier--language/24.ts" }, "namespace": "classifier--language" },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M30 10V2H22v8h3v4H23v2h7V14H27V10zM24 4h4V8H24zM20 23.41L18.59 22 16 24.59 13.41 22 12 23.41 14.59 26 12 28.59 13.41 30 16 27.41 18.59 30 20 28.59 17.41 26 20 23.41zM20 14L12 14 12 16 15 16 15 21 17 21 17 16 20 16 20 14zM7 9.86a4 4 0 1 0-2 0V14H2v2H9V14H7zM4 6A2 2 0 1 1 6 8 2 2 0 0 1 4 6z\"></path></svg>"
            },
            "20": {
                metadata: { "filename": "classifier--language.svg", "basename": "classifier--language", "size": 20, "prefix": ["32"], "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M30 10V2H22v8h3v4H23v2h7V14H27V10zM24 4h4V8H24zM20 23.41L18.59 22 16 24.59 13.41 22 12 23.41 14.59 26 12 28.59 13.41 30 16 27.41 18.59 30 20 28.59 17.41 26 20 23.41zM20 14L12 14 12 16 15 16 15 21 17 21 17 16 20 16 20 14zM7 9.86a4 4 0 1 0-2 0V14H2v2H9V14H7zM4 6A2 2 0 1 1 6 8 2 2 0 0 1 4 6z" } }], "name": "classifier--language", "size": 20 }, "moduleName": "ClassifierLanguage20", "original": 32, "outputOptions": { "file": "ts/classifier--language/20.ts" }, "namespace": "classifier--language" },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M30 10V2H22v8h3v4H23v2h7V14H27V10zM24 4h4V8H24zM20 23.41L18.59 22 16 24.59 13.41 22 12 23.41 14.59 26 12 28.59 13.41 30 16 27.41 18.59 30 20 28.59 17.41 26 20 23.41zM20 14L12 14 12 16 15 16 15 21 17 21 17 16 20 16 20 14zM7 9.86a4 4 0 1 0-2 0V14H2v2H9V14H7zM4 6A2 2 0 1 1 6 8 2 2 0 0 1 4 6z\"></path></svg>"
            },
            "16": {
                metadata: { "filename": "classifier--language.svg", "basename": "classifier--language", "size": 16, "prefix": ["32"], "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M30 10V2H22v8h3v4H23v2h7V14H27V10zM24 4h4V8H24zM20 23.41L18.59 22 16 24.59 13.41 22 12 23.41 14.59 26 12 28.59 13.41 30 16 27.41 18.59 30 20 28.59 17.41 26 20 23.41zM20 14L12 14 12 16 15 16 15 21 17 21 17 16 20 16 20 14zM7 9.86a4 4 0 1 0-2 0V14H2v2H9V14H7zM4 6A2 2 0 1 1 6 8 2 2 0 0 1 4 6z" } }], "name": "classifier--language", "size": 16 }, "moduleName": "ClassifierLanguage16", "original": 32, "outputOptions": { "file": "ts/classifier--language/16.ts" }, "namespace": "classifier--language" },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M30 10V2H22v8h3v4H23v2h7V14H27V10zM24 4h4V8H24zM20 23.41L18.59 22 16 24.59 13.41 22 12 23.41 14.59 26 12 28.59 13.41 30 16 27.41 18.59 30 20 28.59 17.41 26 20 23.41zM20 14L12 14 12 16 15 16 15 21 17 21 17 16 20 16 20 14zM7 9.86a4 4 0 1 0-2 0V14H2v2H9V14H7zM4 6A2 2 0 1 1 6 8 2 2 0 0 1 4 6z\"></path></svg>"
            },
        };
    }
    ClassifierLanguageDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            ClassifierLanguageDirective.titleIdCounter++;
            title.setAttribute("id", "classifier-language-" + ClassifierLanguageDirective.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "classifier-language-" + ClassifierLanguageDirective.titleIdCounter);
        }
    };
    ClassifierLanguageDirective.titleIdCounter = 0;
    ClassifierLanguageDirective.decorators = [
        { type: Directive, args: [{
                    selector: "[ibmIconClassifierLanguage]"
                },] },
    ];
    /** @nocollapse */
    ClassifierLanguageDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    ClassifierLanguageDirective.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        isFocusable: [{ type: Input }],
        size: [{ type: Input }]
    };
    return ClassifierLanguageDirective;
}());
export { ClassifierLanguageDirective };
var ClassifierLanguageModule = /** @class */ (function () {
    function ClassifierLanguageModule() {
    }
    ClassifierLanguageModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        ClassifierLanguageComponent,
                        ClassifierLanguageDirective,
                    ],
                    exports: [
                        ClassifierLanguageComponent,
                        ClassifierLanguageDirective,
                    ]
                },] },
    ];
    return ClassifierLanguageModule;
}());
export { ClassifierLanguageModule };
//# sourceMappingURL=index.js.map