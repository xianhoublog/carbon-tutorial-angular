import { NgModule, Component, Directive, ElementRef, Input } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var Asset20 = /** @class */ (function () {
    function Asset20() {
        this.focusable = false;
    }
    Asset20.decorators = [
        { type: Component, args: [{
                    selector: "ibm-icon-asset20",
                    template: "\n    <svg\n      ibmIconAsset20\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
                },] },
    ];
    Asset20.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        focusable: [{ type: Input }],
        innerClass: [{ type: Input }]
    };
    return Asset20;
}());
export { Asset20 };
var Asset20Directive = /** @class */ (function () {
    function Asset20Directive(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
    }
    Asset20Directive.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var domParser = new DOMParser();
        var rawSVG = "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M12.0752,24a4,4,0,1,1,4-4A4.0042,4.0042,0,0,1,12.0752,24Zm0-6a2,2,0,1,0,2,2A2.0023,2.0023,0,0,0,12.0752,18Z\"></path><path d=\"M30,6a4.0042,4.0042,0,0,0-4-4,3.949,3.949,0,0,0-1.8537.4768L7.7571,10.9579A9.9921,9.9921,0,1,0,21.066,24.1929l8.49-16.3994A3.9491,3.9491,0,0,0,30,6ZM26,4a2,2,0,1,1-2,2A2.0023,2.0023,0,0,1,26,4ZM22.0194,5.8083C22.0163,5.8732,22,5.9343,22,6a4.0042,4.0042,0,0,0,4,4c.0645,0,.1245-.016.1882-.019l-4.3318,8.3617a10.0168,10.0168,0,0,0-8.2158-8.1962ZM12,28a8,8,0,1,1,8-8A8.0092,8.0092,0,0,1,12,28Z\"></path></svg>";
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: 20,
            height: 20,
            viewBox: "0 0 32 32",
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            Asset20Directive.titleIdCounter++;
            title.setAttribute("id", "asset20-" + Asset20Directive.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "asset20-" + Asset20Directive.titleIdCounter);
        }
    };
    Asset20Directive.titleIdCounter = 0;
    Asset20Directive.decorators = [
        { type: Directive, args: [{
                    selector: "[ibmIconAsset20]"
                },] },
    ];
    /** @nocollapse */
    Asset20Directive.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    Asset20Directive.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        isFocusable: [{ type: Input }]
    };
    return Asset20Directive;
}());
export { Asset20Directive };
var Asset20Module = /** @class */ (function () {
    function Asset20Module() {
    }
    Asset20Module.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        Asset20,
                        Asset20Directive
                    ],
                    exports: [
                        Asset20,
                        Asset20Directive
                    ]
                },] },
    ];
    return Asset20Module;
}());
export { Asset20Module };
//# sourceMappingURL=20.js.map