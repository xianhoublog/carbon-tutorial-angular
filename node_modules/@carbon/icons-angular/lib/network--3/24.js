import { NgModule, Component, Directive, ElementRef, Input } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var Network_324 = /** @class */ (function () {
    function Network_324() {
        this.focusable = false;
    }
    Network_324.decorators = [
        { type: Component, args: [{
                    selector: "ibm-icon-network-324",
                    template: "\n    <svg\n      ibmIconNetwork_324\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
                },] },
    ];
    Network_324.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        focusable: [{ type: Input }],
        innerClass: [{ type: Input }]
    };
    return Network_324;
}());
export { Network_324 };
var Network_324Directive = /** @class */ (function () {
    function Network_324Directive(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
    }
    Network_324Directive.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var domParser = new DOMParser();
        var rawSVG = "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M30 30H22V22h8zm-6-2h4V24H24zM20 27H8A6 6 0 0 1 8 15h2v2H8a4 4 0 0 0 0 8H20z\"></path><path d=\"M20,20H12V12h8Zm-6-2h4V14H14Z\"></path><path d=\"M24 17H22V15h2a4 4 0 0 0 0-8H12V5H24a6 6 0 0 1 0 12zM10 10H2V2h8zM4 8H8V4H4z\"></path></svg>";
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: 24,
            height: 24,
            viewBox: "0 0 32 32",
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            Network_324Directive.titleIdCounter++;
            title.setAttribute("id", "network-324-" + Network_324Directive.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "network-324-" + Network_324Directive.titleIdCounter);
        }
    };
    Network_324Directive.titleIdCounter = 0;
    Network_324Directive.decorators = [
        { type: Directive, args: [{
                    selector: "[ibmIconNetwork_324]"
                },] },
    ];
    /** @nocollapse */
    Network_324Directive.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    Network_324Directive.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        isFocusable: [{ type: Input }]
    };
    return Network_324Directive;
}());
export { Network_324Directive };
var Network_324Module = /** @class */ (function () {
    function Network_324Module() {
    }
    Network_324Module.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        Network_324,
                        Network_324Directive
                    ],
                    exports: [
                        Network_324,
                        Network_324Directive
                    ]
                },] },
    ];
    return Network_324Module;
}());
export { Network_324Module };
//# sourceMappingURL=24.js.map