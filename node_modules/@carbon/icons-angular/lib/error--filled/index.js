import { NgModule, Component, Directive, ElementRef, Input } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var ErrorFilledComponent = /** @class */ (function () {
    function ErrorFilledComponent() {
        this.focusable = false;
    }
    ErrorFilledComponent.decorators = [
        { type: Component, args: [{
                    selector: "ibm-icon-error-filled",
                    template: "\n    <svg\n      ibmIconErrorFilled\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
                },] },
    ];
    ErrorFilledComponent.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        focusable: [{ type: Input }],
        innerClass: [{ type: Input }],
        size: [{ type: Input }]
    };
    return ErrorFilledComponent;
}());
export { ErrorFilledComponent };
var ErrorFilledDirective = /** @class */ (function () {
    function ErrorFilledDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "16": {
                metadata: { "filename": "error--filled.svg", "basename": "error--filled", "size": 16, "prefix": ["16"], "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 16 16", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M8,1C4.1,1,1,4.1,1,8s3.1,7,7,7s7-3.1,7-7S11.9,1,8,1z M10.7,11.5L4.5,5.3l0.8-0.8l6.2,6.2L10.7,11.5z" } }, { "elem": "path", "attrs": { "fill": "none", "d": "M10.7,11.5L4.5,5.3l0.8-0.8l6.2,6.2L10.7,11.5z", "data-icon-path": "inner-path", "opacity": "0" } }], "name": "error--filled", "size": 16 }, "moduleName": "ErrorFilled16", "outputOptions": { "file": "ts/error--filled/16.ts" }, "namespace": "error--filled" },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" aria-hidden=\"true\"><path d=\"M8,1C4.1,1,1,4.1,1,8s3.1,7,7,7s7-3.1,7-7S11.9,1,8,1z M10.7,11.5L4.5,5.3l0.8-0.8l6.2,6.2L10.7,11.5z\"></path><path fill=\"none\" d=\"M10.7,11.5L4.5,5.3l0.8-0.8l6.2,6.2L10.7,11.5z\" data-icon-path=\"inner-path\" opacity=\"0\"></path></svg>"
            },
            "20": {
                metadata: { "filename": "error--filled.svg", "basename": "error--filled", "size": 20, "prefix": ["20"], "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 20 20", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M10,1c-5,0-9,4-9,9s4,9,9,9s9-4,9-9S15,1,10,1z M13.5,14.5l-8-8l1-1l8,8L13.5,14.5z" } }, { "elem": "path", "attrs": { "d": "M13.5,14.5l-8-8l1-1l8,8L13.5,14.5z", "data-icon-path": "inner-path", "opacity": "0" } }], "name": "error--filled", "size": 20 }, "moduleName": "ErrorFilled20", "outputOptions": { "file": "ts/error--filled/20.ts" }, "namespace": "error--filled" },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" aria-hidden=\"true\"><path d=\"M10,1c-5,0-9,4-9,9s4,9,9,9s9-4,9-9S15,1,10,1z M13.5,14.5l-8-8l1-1l8,8L13.5,14.5z\"></path><path d=\"M13.5,14.5l-8-8l1-1l8,8L13.5,14.5z\" data-icon-path=\"inner-path\" opacity=\"0\"></path></svg>"
            },
            "24": {
                metadata: { "filename": "error--filled.svg", "basename": "error--filled", "size": 24, "prefix": ["24"], "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 24 24", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M12,1C5.9,1,1,5.9,1,12s4.9,11,11,11s11-4.9,11-11S18.1,1,12,1z M16.3,17.5L6.5,7.7l1.2-1.2l9.8,9.8L16.3,17.5z" } }, { "elem": "path", "attrs": { "fill": "none", "d": "M16.3,17.5L6.5,7.7l1.2-1.2l9.8,9.8L16.3,17.5z", "data-icon-path": "inner-path", "opacity": "0" } }], "name": "error--filled", "size": 24 }, "moduleName": "ErrorFilled24", "outputOptions": { "file": "ts/error--filled/24.ts" }, "namespace": "error--filled" },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M12,1C5.9,1,1,5.9,1,12s4.9,11,11,11s11-4.9,11-11S18.1,1,12,1z M16.3,17.5L6.5,7.7l1.2-1.2l9.8,9.8L16.3,17.5z\"></path><path fill=\"none\" d=\"M16.3,17.5L6.5,7.7l1.2-1.2l9.8,9.8L16.3,17.5z\" data-icon-path=\"inner-path\" opacity=\"0\"></path></svg>"
            },
            "32": {
                metadata: { "filename": "error--filled.svg", "basename": "error--filled", "size": 32, "prefix": ["32"], "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M16,2C8.2,2,2,8.2,2,16s6.2,14,14,14s14-6.2,14-14S23.8,2,16,2z M21.4,23L9,10.6L10.6,9L23,21.4L21.4,23z" } }, { "elem": "path", "attrs": { "fill": "none", "d": "M21.4,23L9,10.6L10.6,9L23,21.4L21.4,23z", "data-icon-path": "inner-path", "opacity": "0" } }], "name": "error--filled", "size": 32 }, "moduleName": "ErrorFilled32", "outputOptions": { "file": "ts/error--filled/32.ts" }, "namespace": "error--filled" },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M16,2C8.2,2,2,8.2,2,16s6.2,14,14,14s14-6.2,14-14S23.8,2,16,2z M21.4,23L9,10.6L10.6,9L23,21.4L21.4,23z\"></path><path fill=\"none\" d=\"M21.4,23L9,10.6L10.6,9L23,21.4L21.4,23z\" data-icon-path=\"inner-path\" opacity=\"0\"></path></svg>"
            },
        };
    }
    ErrorFilledDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            ErrorFilledDirective.titleIdCounter++;
            title.setAttribute("id", "error-filled-" + ErrorFilledDirective.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "error-filled-" + ErrorFilledDirective.titleIdCounter);
        }
    };
    ErrorFilledDirective.titleIdCounter = 0;
    ErrorFilledDirective.decorators = [
        { type: Directive, args: [{
                    selector: "[ibmIconErrorFilled]"
                },] },
    ];
    /** @nocollapse */
    ErrorFilledDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    ErrorFilledDirective.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        isFocusable: [{ type: Input }],
        size: [{ type: Input }]
    };
    return ErrorFilledDirective;
}());
export { ErrorFilledDirective };
var ErrorFilledModule = /** @class */ (function () {
    function ErrorFilledModule() {
    }
    ErrorFilledModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        ErrorFilledComponent,
                        ErrorFilledDirective,
                    ],
                    exports: [
                        ErrorFilledComponent,
                        ErrorFilledDirective,
                    ]
                },] },
    ];
    return ErrorFilledModule;
}());
export { ErrorFilledModule };
//# sourceMappingURL=index.js.map