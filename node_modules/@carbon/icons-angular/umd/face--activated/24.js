(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@carbon/icon-helpers')) :
    typeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@carbon/icon-helpers'], factory) :
    (global = global || self, factory(global.CarbonIconsAngular = {}, global.ng.Core, global.CarbonIconHelpers));
}(this, (function (exports, core, iconHelpers) { 'use strict';

    var FaceActivated24 = /** @class */ (function () {
        function FaceActivated24() {
            this.focusable = false;
        }
        FaceActivated24.decorators = [
            { type: core.Component, args: [{
                        selector: "ibm-icon-face-activated24",
                        template: "\n    <svg\n      ibmIconFaceActivated24\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
                    },] },
        ];
        FaceActivated24.propDecorators = {
            ariaLabel: [{ type: core.Input }],
            ariaLabelledby: [{ type: core.Input }],
            ariaHidden: [{ type: core.Input }],
            title: [{ type: core.Input }],
            focusable: [{ type: core.Input }],
            innerClass: [{ type: core.Input }]
        };
        return FaceActivated24;
    }());
    var FaceActivated24Directive = /** @class */ (function () {
        function FaceActivated24Directive(elementRef) {
            this.elementRef = elementRef;
            this.isFocusable = false;
        }
        FaceActivated24Directive.prototype.ngAfterViewInit = function () {
            var svg = this.elementRef.nativeElement;
            svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
            var domParser = new DOMParser();
            var rawSVG = "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm0,26A12,12,0,1,1,28,16,12,12,0,0,1,16,28Z\"></path><path d=\"M11.5 11A2.5 2.5 0 1 0 14 13.5 2.48 2.48 0 0 0 11.5 11zM20.5 11A2.5 2.5 0 1 0 23 13.5 2.48 2.48 0 0 0 20.5 11zM9 20a8.13 8.13 0 0 0 14 0z\"></path></svg>";
            var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
            var node = svgElement.firstChild;
            while (node) {
                // importNode makes a clone of the node
                // this ensures we keep looping over the nodes in the parsed document
                svg.appendChild(svg.ownerDocument.importNode(node, true));
                node = node.nextSibling;
            }
            var attributes = iconHelpers.getAttributes({
                width: 24,
                height: 24,
                viewBox: "0 0 32 32",
                title: this.title,
                "aria-label": this.ariaLabel,
                "aria-labelledby": this.ariaLabelledby,
                "aria-hidden": this.ariaHidden,
                focusable: this.isFocusable.toString()
            });
            var attrKeys = Object.keys(attributes);
            for (var i = 0; i < attrKeys.length; i++) {
                var key = attrKeys[i];
                var value = attributes[key];
                if (key === "title") {
                    continue;
                }
                if (value) {
                    svg.setAttribute(key, value);
                }
            }
            if (attributes.title) {
                var title = document.createElement("title");
                title.textContent = attributes.title;
                FaceActivated24Directive.titleIdCounter++;
                title.setAttribute("id", "face-activated24-" + FaceActivated24Directive.titleIdCounter);
                svg.appendChild(title);
                svg.setAttribute("aria-labelledby", "face-activated24-" + FaceActivated24Directive.titleIdCounter);
            }
        };
        FaceActivated24Directive.titleIdCounter = 0;
        FaceActivated24Directive.decorators = [
            { type: core.Directive, args: [{
                        selector: "[ibmIconFaceActivated24]"
                    },] },
        ];
        /** @nocollapse */
        FaceActivated24Directive.ctorParameters = function () { return [
            { type: core.ElementRef }
        ]; };
        FaceActivated24Directive.propDecorators = {
            ariaLabel: [{ type: core.Input }],
            ariaLabelledby: [{ type: core.Input }],
            ariaHidden: [{ type: core.Input }],
            title: [{ type: core.Input }],
            isFocusable: [{ type: core.Input }]
        };
        return FaceActivated24Directive;
    }());
    var FaceActivated24Module = /** @class */ (function () {
        function FaceActivated24Module() {
        }
        FaceActivated24Module.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [
                            FaceActivated24,
                            FaceActivated24Directive
                        ],
                        exports: [
                            FaceActivated24,
                            FaceActivated24Directive
                        ]
                    },] },
        ];
        return FaceActivated24Module;
    }());

    exports.FaceActivated24 = FaceActivated24;
    exports.FaceActivated24Directive = FaceActivated24Directive;
    exports.FaceActivated24Module = FaceActivated24Module;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
